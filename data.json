{
    "project": {},
    "files": {
        "pedigree/abstractHoverbox.js": {
            "name": "pedigree/abstractHoverbox.js",
            "modules": {},
            "classes": {
                "AbstractHoverbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/abstractNode.js": {
            "name": "pedigree/abstractNode.js",
            "modules": {},
            "classes": {
                "AbstractNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/abstractNodeVisuals.js": {
            "name": "pedigree/abstractNodeVisuals.js",
            "modules": {},
            "classes": {
                "AbstractNodeVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/abstractPerson.js": {
            "name": "pedigree/abstractPerson.js",
            "modules": {},
            "classes": {
                "AbstractPerson": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/abstractPersonVisuals.js": {
            "name": "pedigree/abstractPersonVisuals.js",
            "modules": {},
            "classes": {
                "AbstractPersonVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/actionStack.js": {
            "name": "pedigree/actionStack.js",
            "modules": {},
            "classes": {
                "ActionStack": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/ageCalc.js": {
            "name": "pedigree/ageCalc.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pedigree/graph.js": {
            "name": "pedigree/graph.js",
            "modules": {},
            "classes": {
                "Graph": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/graphicHelpers.js": {
            "name": "pedigree/graphicHelpers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pedigree/groupHoverbox.js": {
            "name": "pedigree/groupHoverbox.js",
            "modules": {},
            "classes": {
                "GroupHoverbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/kdTree.js": {
            "name": "pedigree/kdTree.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pedigree/layout.js": {
            "name": "pedigree/layout.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pedigree/legend.js": {
            "name": "pedigree/legend.js",
            "modules": {},
            "classes": {
                "Legend": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/nodeIndex.js": {
            "name": "pedigree/nodeIndex.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pedigree/nodeMenu.js": {
            "name": "pedigree/nodeMenu.js",
            "modules": {},
            "classes": {
                "NodeMenu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/nodetypeSelectionBubble.js": {
            "name": "pedigree/nodetypeSelectionBubble.js",
            "modules": {},
            "classes": {
                "NodetypeSelectionBubble": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/partnership.js": {
            "name": "pedigree/partnership.js",
            "modules": {},
            "classes": {
                "Partnership": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/partnershipHoverbox.js": {
            "name": "pedigree/partnershipHoverbox.js",
            "modules": {},
            "classes": {
                "PartnershipHoverbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/partnershipVisuals.js": {
            "name": "pedigree/partnershipVisuals.js",
            "modules": {},
            "classes": {
                "PartnershipVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/pedigree.js": {
            "name": "pedigree/pedigree.js",
            "modules": {},
            "classes": {
                "PedigreeEditor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/person.js": {
            "name": "pedigree/person.js",
            "modules": {},
            "classes": {
                "Person": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/personGroup.js": {
            "name": "pedigree/personGroup.js",
            "modules": {},
            "classes": {
                "PersonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/personGroupVisuals.js": {
            "name": "pedigree/personGroupVisuals.js",
            "modules": {},
            "classes": {
                "PersonGroupVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/personHoverbox.js": {
            "name": "pedigree/personHoverbox.js",
            "modules": {},
            "classes": {
                "PersonHoverbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/personVisuals.js": {
            "name": "pedigree/personVisuals.js",
            "modules": {},
            "classes": {
                "PersonVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/placeHolder.js": {
            "name": "pedigree/placeHolder.js",
            "modules": {},
            "classes": {
                "PlaceHolder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/placeHolderVisuals.js": {
            "name": "pedigree/placeHolderVisuals.js",
            "modules": {},
            "classes": {
                "PlaceHolderVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/pregnancy.js": {
            "name": "pedigree/pregnancy.js",
            "modules": {},
            "classes": {
                "Pregnancy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/pregnancyVisuals.js": {
            "name": "pedigree/pregnancyVisuals.js",
            "modules": {},
            "classes": {
                "PregnancyVisuals": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/raphaelzpd.js": {
            "name": "pedigree/raphaelzpd.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "pedigree/saveLoadEngine.js": {
            "name": "pedigree/saveLoadEngine.js",
            "modules": {},
            "classes": {
                "SaveLoadEngine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/saveLoadIndicator.js": {
            "name": "pedigree/saveLoadIndicator.js",
            "modules": {},
            "classes": {
                "SaveLoadIndicator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/templateSelector.js": {
            "name": "pedigree/templateSelector.js",
            "modules": {},
            "classes": {
                "ClassName": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "pedigree/workspace.js": {
            "name": "pedigree/workspace.js",
            "modules": {},
            "classes": {
                "Workspace": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "AbstractHoverbox": {
            "name": "AbstractHoverbox",
            "shortname": "AbstractHoverbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/abstractHoverbox.js",
            "line": 1,
            "description": "AbstractHoverbox is an abstract class for all the UI elements and graphics surrounding a node on the canvas (a Person\nor a partnership). This includes the box that appears around the node when it's hovered by a mouse, as\nwell as the handles used for creating connections and creating new nodes.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node Person or Partnership for which the hoverbox is drawn",
                    "type": "AbstractNode"
                },
                {
                    "name": "x",
                    "description": "The x coordinate for the hoverbox",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the hoverbox",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "The width in pixels",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "The height in pixels",
                    "type": "Number"
                },
                {
                    "name": "nodeX",
                    "description": "The x coordinate of the node for which the hoverbox is drawn",
                    "type": "Number"
                },
                {
                    "name": "nodeY",
                    "description": "The y coordinate of the node for which the hoverbox is drawn",
                    "type": "Number"
                },
                {
                    "name": "nodeShapes",
                    "description": "Raphaël set containing the graphical elements that make up the node",
                    "type": "Raphael.st"
                }
            ]
        },
        "AbstractNode": {
            "name": "AbstractNode",
            "shortname": "AbstractNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/abstractNode.js",
            "line": 1,
            "description": "AbstractNode is the general abstract class for nodes on the Pedigree graph. An AbstractNode contains information\nabout its position on the canvas and about relationships with other nodes on the graph.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        "AbstractNodeVisuals": {
            "name": "AbstractNodeVisuals",
            "shortname": "AbstractNodeVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 1,
            "description": "AbstractNodeVisuals is the general abstract class for the graphic engine used by nodes on the Pedigree graph.\nObjects of this class have information about the positioning of the graphical elements of the node.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node for which the graphics are drawn",
                    "type": "AbstractNode"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "AbstractPerson": {
            "name": "AbstractPerson",
            "shortname": "AbstractPerson",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/abstractPerson.js",
            "line": 2,
            "description": "A general superclass for Person nodes on the Pedigree graph. Contains information about related nodes\nand some properties specific for people. Creates an instance of AbstractPersonVisuals on initialization",
            "extends": "AbstractNode",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "Can be \"M\", \"F\", or \"U\"",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ]
        },
        "AbstractPersonVisuals": {
            "name": "AbstractPersonVisuals",
            "shortname": "AbstractPersonVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 1,
            "description": "An abstract superclass for the a graphic engine used by nodes on the Pedigree graph. Can display\na shape representing the gender of the attached node.",
            "extends": "AbstractNodeVisuals",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node for which this graphics are handled",
                    "type": "AbstractPerson"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "ActionStack": {
            "name": "ActionStack",
            "shortname": "ActionStack",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/actionStack.js",
            "line": 1,
            "description": "ActionStack is responsible for keeping track of user actions and providing an undo/redo functionality",
            "is_constructor": 1
        },
        "Graph": {
            "name": "Graph",
            "shortname": "Graph",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/graph.js",
            "line": 1,
            "description": "Graph is responsible for the adding and removal of nodes. It is also responsible for\nnode selection and interaction between nodes.",
            "is_constructor": 1
        },
        "GroupHoverbox": {
            "name": "GroupHoverbox",
            "shortname": "GroupHoverbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/groupHoverbox.js",
            "line": 1,
            "description": "GroupHoverbox is a class for all the UI elements and graphics surrounding a PersonGroup node and\nits labels. This includes the box that appears around the node when it's hovered by a mouse.",
            "extends": "AbstractHoverbox",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node PersonGroup for which the hoverbox is drawn",
                    "type": "PersonGroup"
                },
                {
                    "name": "centerX",
                    "description": "The x coordinate for the hoverbox",
                    "type": "Number"
                },
                {
                    "name": "centerY",
                    "description": "The y coordinate for the hoverbox",
                    "type": "Number"
                },
                {
                    "name": "nodeShapes",
                    "description": "Raphaël set containing the graphical elements that make up the node",
                    "type": "Raphael.st"
                }
            ]
        },
        "Legend": {
            "name": "Legend",
            "shortname": "Legend",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/legend.js",
            "line": 1,
            "description": "Class responsible for keeping track of disorders and their properties.\nThis information is graphically displayed in a 'Legend' box",
            "is_constructor": 1
        },
        "NodeMenu": {
            "name": "NodeMenu",
            "shortname": "NodeMenu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/nodeMenu.js",
            "line": 1,
            "description": "NodeMenu is a UI Element containing options for AbstractNode elements",
            "is_constructor": 1,
            "params": [
                {
                    "name": "data",
                    "description": "Contains objects corresponding to different menu items\n\n{\n[\n   {\n       'name' : the name of the menu item,\n       'label' : the text label above this menu option,\n       'type' : the type of form input. (eg. 'radio', 'date-picker', 'text', 'disease-picker', 'select'),\n       'values' : [\n                   {'actual' : actual value of the option, 'displayed' : the way the option will be seen in the menu} ...\n                   ]\n   }, ...\n]\n}",
                    "type": "Array"
                }
            ]
        },
        "NodetypeSelectionBubble": {
            "name": "NodetypeSelectionBubble",
            "shortname": "NodetypeSelectionBubble",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 1,
            "description": "The UI element (\"bubble\") that contains options for the creation of a new node.",
            "is_constructor": 1
        },
        "Partnership": {
            "name": "Partnership",
            "shortname": "Partnership",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/partnership.js",
            "line": 1,
            "description": "Partnership is a class that represents the relationship between two AbstractNodes\nand their children.",
            "is_constructor": 1,
            "extends": "AbstractNode",
            "params": [
                {
                    "name": "x",
                    "description": "the x coordinate at which the partnership junction will be placed"
                },
                {
                    "name": "y",
                    "description": "the y coordinate at which the partnership junction will be placed"
                },
                {
                    "name": "partner1",
                    "description": "an AbstractPerson who's one of the partners in the relationship."
                },
                {
                    "name": "partner2",
                    "description": "an AbstractPerson who's the other partner in the relationship. The order of partners is irrelevant."
                }
            ],
            "id": "the unique ID number of this node"
        },
        "PartnershipHoverbox": {
            "name": "PartnershipHoverbox",
            "shortname": "PartnershipHoverbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/partnershipHoverbox.js",
            "line": 1,
            "description": "PartnershipHoverbox is a class for all the UI elements and graphics surrounding a Partnership node and\nits labels. This includes the box that appears around the node when it's hovered by a mouse, as\nwell as the handles used for creating connections and creating new nodes.",
            "extends": "AbstractHoverbox",
            "is_constructor": 1,
            "params": [
                {
                    "name": "partnership",
                    "description": "The Partnership for which the hoverbox is drawn",
                    "type": "Partnership"
                },
                {
                    "name": "junctionX",
                    "description": "The x coordinate around which the partnership bubble is centered",
                    "type": "Number"
                },
                {
                    "name": "junctionY",
                    "description": "The y coordinate around which the partnership bubble is centered",
                    "type": "Number"
                },
                {
                    "name": "shapes",
                    "description": "Raphaël set containing the graphical elements that make up the node",
                    "type": "Raphael.st"
                }
            ]
        },
        "PartnershipVisuals": {
            "name": "PartnershipVisuals",
            "shortname": "PartnershipVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/partnershipVisuals.js",
            "line": 1,
            "description": "Class for visualizing partnerships and organizing the graphical elements.",
            "extends": "AbstractNodeVisuals",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node for which the graphics are handled",
                    "type": "Partnership"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "PedigreeEditor": {
            "name": "PedigreeEditor",
            "shortname": "PedigreeEditor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/pedigree.js",
            "line": 2,
            "description": "The main class of the Pedigree Editor, responsible for initializing all the basic elements of the app.\nContains wrapper methods for the most commonly used functions.\nThis class should be initialized only once.",
            "is_constructor": 1
        },
        "Person": {
            "name": "Person",
            "shortname": "Person",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/person.js",
            "line": 1,
            "description": "Person is a class representing any AbstractPerson that has sufficient information to be\ndisplayed on the final pedigree graph (printed or exported). Person objects\ncontain information about disorders, age and other relevant properties, as well\nas graphical data to visualize this information.",
            "is_constructor": 1,
            "extends": "AbstractPerson",
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "'M', 'F' or 'U' depending on the gender",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Unique ID number",
                    "type": "Number"
                },
                {
                    "name": "isProband",
                    "description": "True if this person is the proband",
                    "type": "Boolean"
                }
            ]
        },
        "PersonGroup": {
            "name": "PersonGroup",
            "shortname": "PersonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/personGroup.js",
            "line": 1,
            "description": "PersonGroup is node that represents a grouping of an unknown number of nodes (\"n\"). This type of\nnode is usually used to indicate the existence of relatives without providing any other information.\nTherefore the options for this node are limited.",
            "is_constructor": 1,
            "extends": "AbstractPerson",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "Either 'M', 'F' or 'U' depending on the gender",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Unique ID number",
                    "type": "Number"
                }
            ]
        },
        "PersonGroupVisuals": {
            "name": "PersonGroupVisuals",
            "shortname": "PersonGroupVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/personGroupVisuals.js",
            "line": 1,
            "description": "Class for organizing graphics for PersonGroup nodes.",
            "is_constructor": 1,
            "extends": "AbstractPersonVisuals",
            "params": [
                {
                    "name": "node",
                    "description": "The node for which this graphics are handled",
                    "type": "PersonGroup"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "PersonHoverbox": {
            "name": "PersonHoverbox",
            "shortname": "PersonHoverbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/personHoverbox.js",
            "line": 1,
            "description": "PersonHoverbox is a class for all the UI elements and graphics surrounding a Person node and\nits labels. This includes the box that appears around the node when it's hovered by a mouse, as\nwell as the handles used for creating connections and creating new nodes.",
            "extends": "AbstractHoverbox",
            "is_constructor": 1,
            "params": [
                {
                    "name": "personNode",
                    "description": "The person for whom this hoverbox is being drawn.",
                    "type": "Person"
                },
                {
                    "name": "centerX",
                    "description": "The X coordinate for the center of the hoverbox",
                    "type": "Number"
                },
                {
                    "name": "centerY",
                    "description": "The Y coordinate for the center of the hoverbox",
                    "type": "Number"
                },
                {
                    "name": "nodeShapes",
                    "description": "All shapes associated with the person node",
                    "type": "Raphael.st"
                }
            ]
        },
        "PersonVisuals": {
            "name": "PersonVisuals",
            "shortname": "PersonVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/personVisuals.js",
            "line": 1,
            "description": "Class for organizing graphics for Person nodes.",
            "extends": "AbstractPersonVisuals",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node for which the graphics are handled",
                    "type": "Person"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "PlaceHolder": {
            "name": "PlaceHolder",
            "shortname": "PlaceHolder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/placeHolder.js",
            "line": 1,
            "description": "PlaceHolder objects act as reminders for the user that information about relatives is missing. A PlaceHolder\nshares common traits with a Person, such as id, gender and position but it will not be displayed in the\nfinal exported version of the graph. Placeholders use a dotted outline to distinguish themselves from\nPerson nodes.",
            "extends": "AbstractPerson",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "'M', 'F' or 'U'",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Unique ID number",
                    "type": "Number"
                }
            ]
        },
        "PlaceHolderVisuals": {
            "name": "PlaceHolderVisuals",
            "shortname": "PlaceHolderVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/placeHolderVisuals.js",
            "line": 1,
            "description": "Class for organizing graphics for PlaceHolder nodes.",
            "extends": "AbstractPersonVisuals",
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "The node for which the graphics are handled",
                    "type": "PlaceHolder"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "Pregnancy": {
            "name": "Pregnancy",
            "shortname": "Pregnancy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/pregnancy.js",
            "line": 1,
            "description": "Pregnancy is a node contained by a Partnership and is used to group and manage\nmonozygotic twins.",
            "extends": "AbstractNode",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate at which the pregnancy node will be placed",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate at which the pregnancy node will be placed",
                    "type": "Number"
                },
                {
                    "name": "partnership",
                    "description": "The partnership that has this pregnancy",
                    "type": "Partnership"
                },
                {
                    "name": "id",
                    "description": "ID of this node",
                    "type": "Number"
                }
            ]
        },
        "PregnancyVisuals": {
            "name": "PregnancyVisuals",
            "shortname": "PregnancyVisuals",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/pregnancyVisuals.js",
            "line": 1,
            "description": "Class for organizing graphics for Pregnancy nodes.",
            "extends": "AbstractNodeVisuals",
            "is_constructor": 1,
            "params": [
                {
                    "name": "pregnancy",
                    "description": "The node for which the graphics are handled",
                    "type": "Pregnancy"
                },
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "SaveLoadEngine": {
            "name": "SaveLoadEngine",
            "shortname": "SaveLoadEngine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/saveLoadEngine.js",
            "line": 1,
            "description": "SaveLoadEngine is responsible for automatic and manual save and load operations.",
            "is_constructor": 1
        },
        "SaveLoadIndicator": {
            "name": "SaveLoadIndicator",
            "shortname": "SaveLoadIndicator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/saveLoadIndicator.js",
            "line": 1,
            "description": "SaveLoadIndicator is a window that notifies the user of loading and saving progress.",
            "is_constructor": 1
        },
        "ClassName": {
            "name": "ClassName",
            "shortname": "ClassName",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/templateSelector.js",
            "line": 1,
            "description": "Class description",
            "is_constructor": 1,
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                }
            ]
        },
        "Workspace": {
            "name": "Workspace",
            "shortname": "Workspace",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "pedigree/workspace.js",
            "line": 1,
            "description": "Workspace contains the Raphael canvas, the zoom/pan controls and the menu bar\non the top. The class includes functions for managing the Raphael paper object and coordinate transformation methods\nfor taking pan and zoom levels into account.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 49,
            "description": "Returns the x coordinate of the hoverbox",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "The x coordinate in pixels",
                "type": "Number"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 59,
            "description": "Returns the y coordinate of the hoverbox",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "The y coordinate in pixels",
                "type": "Number"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 69,
            "description": "Returns the x coordinate of the attached node",
            "itemtype": "method",
            "name": "getNodeX",
            "return": {
                "description": "The x coordinate in pixels",
                "type": "Number"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 79,
            "description": "Returns the y coordinate of the attached node",
            "itemtype": "method",
            "name": "getNodeY",
            "return": {
                "description": "The y coordinate in pixels",
                "type": "Number"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 89,
            "description": "Returns the width of the hoverbox",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "The width in pixels",
                "type": "Number"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 99,
            "description": "Returns the height of the hoverbox",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "The height in pixels",
                "type": "Number"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 109,
            "description": "Returns the node for which the hoverbox is drawn",
            "itemtype": "method",
            "name": "getNode",
            "return": {
                "description": "Can be either a Partnership or a Person",
                "type": "AbstractNode"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 119,
            "description": "Creates the buttons used in this hoverbox",
            "itemtype": "method",
            "name": "generateButtons",
            "return": {
                "description": "A set of buttons",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 129,
            "description": "Returns Raphael set of the buttons in this hoverbox",
            "itemtype": "method",
            "name": "getButtons",
            "return": {
                "description": "A set of buttons",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 139,
            "description": "Creates the handles used in this hoverbox",
            "itemtype": "method",
            "name": "generateHandles",
            "return": {
                "description": "A set of handles",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 149,
            "description": "Returns a Raphael set of the currently visible handles",
            "itemtype": "method",
            "name": "getCurrentHandles",
            "return": {
                "description": "A set of handles",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 159,
            "description": "Returns the a Raphael set containing the four draggable handles",
            "itemtype": "method",
            "name": "getHandles",
            "return": {
                "description": "A set of handles",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 169,
            "description": "Generates a button and places it on the hoverbox",
            "itemtype": "method",
            "name": "createButton",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate of the button",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the button",
                    "type": "Number"
                },
                {
                    "name": "svgPath",
                    "description": "The svg path for the button",
                    "type": "String|Array"
                },
                {
                    "name": "attributes",
                    "description": "The svg attributes"
                },
                {
                    "name": "onClick",
                    "description": "Callback for the button",
                    "type": "Function"
                },
                {
                    "name": "className",
                    "description": "The class attribute for the button",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The generated button",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 214,
            "description": "Creates a show-menu button",
            "itemtype": "method",
            "name": "generateMenuBtn",
            "return": {
                "description": "The generated button",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 231,
            "description": "Creates and returns a delete button (big red X).",
            "itemtype": "method",
            "name": "generateDeleteBtn",
            "return": {
                "description": "the generated button",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 249,
            "description": "Returns the gray box that appears when the node is hovered",
            "itemtype": "method",
            "name": "getBoxOnHover",
            "return": {
                "description": "Raphael rectangle element",
                "type": "Raphael.el"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 259,
            "description": "Returns true box if the hoverbox is currently hovered",
            "itemtype": "method",
            "name": "isHovered",
            "return": {
                "description": "Raphael rectangle element",
                "type": "Boolean"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 269,
            "description": "Sets the hovered property to isHovered.",
            "itemtype": "method",
            "name": "setHovered",
            "params": [
                {
                    "name": "isHovered",
                    "description": "Set to true if the box is hovered",
                    "type": "Boolean"
                }
            ],
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 278,
            "description": "Returns the invisible mask layer in front of the hoverbox",
            "itemtype": "method",
            "name": "getHoverZoneMask",
            "return": {
                "description": "Raphael rectangle",
                "type": "Raphael.el"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 288,
            "description": "Returns a Raphael set containing all hoverbox elements that are layered\nin front of the node graphics",
            "itemtype": "method",
            "name": "getFrontElements",
            "return": {
                "description": "set of Raphael elements",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 299,
            "description": "Returns a Raphael set containing all hoverbox elements that are layered\nbehind of the node graphics",
            "itemtype": "method",
            "name": "getBackElements",
            "return": {
                "description": "set of Raphael elements",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 310,
            "description": "Creates a handle with a blue orb from the center of the node and places it behind the node icon",
            "itemtype": "method",
            "name": "generateHandle",
            "params": [
                {
                    "name": "type",
                    "description": "Should be 'parent', 'child' or 'partner'",
                    "type": "String"
                },
                {
                    "name": "orbX",
                    "description": "The x coordinate of the orb",
                    "type": "Number"
                },
                {
                    "name": "orbY",
                    "description": "The y coordinate of the orb",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Raphael set of elements that make up the handle",
                "type": "Raphael.st"
            },
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 418,
            "description": "Hides the child handle",
            "itemtype": "method",
            "name": "hideChildHandle",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 427,
            "description": "Unhides the child handle",
            "itemtype": "method",
            "name": "unhideChildHandle",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 453,
            "description": "Fades the hoverbox graphics out",
            "itemtype": "method",
            "name": "animateHideHoverZone",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 469,
            "description": "Hides the hoverbox's graphical elements",
            "itemtype": "method",
            "name": "hide",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 482,
            "description": "Stops the hoverbox from responding to mouseovers",
            "itemtype": "method",
            "name": "disable",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 491,
            "description": "Attaches onMouseOver behavior to the hoverbox",
            "itemtype": "method",
            "name": "enable",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 500,
            "description": "Deletes the hoverbox",
            "itemtype": "method",
            "name": "remove",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractHoverbox.js",
            "line": 511,
            "description": "Updates the hoverbox behavior after a widget (like the menu) is closed",
            "itemtype": "method",
            "name": "onWidgetHide",
            "class": "AbstractHoverbox"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 20,
            "description": "Returns the unique ID of this node",
            "itemtype": "method",
            "name": "getID",
            "return": {
                "description": "the id of the node",
                "type": "Number"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 30,
            "description": "Generates an instance of AbstractNodeVisuals",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate of the node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of the node",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "AbstractNodeVisuals"
            },
            "access": "private",
            "tagname": "",
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 43,
            "description": "Returns the object responsible for managing graphics",
            "itemtype": "method",
            "name": "getGraphics",
            "return": {
                "description": "",
                "type": "AbstractNodeVisuals"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 53,
            "description": "Returns the X coordinate of the node on the canvas",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "the x coordinate",
                "type": "Number"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 63,
            "description": "Changes the X coordinate of the node",
            "itemtype": "method",
            "name": "setX",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true if you want to animate the transition",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The function called at the end of the animation",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 75,
            "description": "Returns the Y coordinate of the node on the canvas",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "the y coordinate",
                "type": "Number"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 85,
            "description": "Changes the Y coordinate of the node",
            "itemtype": "method",
            "name": "setY",
            "params": [
                {
                    "name": "y",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true if you want to animate the transition",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The function called at the end of the animation",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 97,
            "description": "Returns an array containing the x and y coordinates of the node on canvas.",
            "itemtype": "method",
            "name": "getPos",
            "return": {
                "description": "Array in the form of [x, y]",
                "type": "Array"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 107,
            "description": "Changes the position of the node to (x,y)",
            "itemtype": "method",
            "name": "setPos",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true if you want to animate the transition",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The function called at the end of the animation",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 120,
            "description": "Returns the type of this node",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "The type (eg. \"Partnership\", \"Person\", etc)",
                "type": "String"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 130,
            "description": "Returns an array of all adjacent nodes (neighbors).",
            "itemtype": "method",
            "name": "getNeighbors",
            "return": {
                "description": "in the form of [node1, node2, ...]",
                "type": "Array"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 140,
            "description": "Returns an array of all adjacent nodes (neighbors) located below this node.",
            "itemtype": "method",
            "name": "getLowerNeighbors",
            "return": {
                "description": "in the form of [node1, node2, ...]",
                "type": "Array"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 150,
            "description": "Returns an array of all adjacent nodes (neighbors) located on the sides of this node.",
            "itemtype": "method",
            "name": "getSideNeighbors",
            "return": {
                "description": "in the form of [node1, node2, ...]",
                "type": "Array"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 160,
            "description": "Returns an array of all adjacent nodes (neighbors) located above this node.",
            "itemtype": "method",
            "name": "getUpperNeighbors",
            "return": {
                "description": "in the form of [node1, node2, ...]",
                "type": "Array"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 170,
            "description": "Breaks connections with related nodes and removes the node and its visuals.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "isRecursive",
                    "description": "if true, will remove all nodes that will end up disconnected from the\nProband",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "skipConfirmation",
                    "description": "if true, no confirmation box will pop up",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "in the form\n\n        {\n           confirmed: true/false,\n           affected: {\n               PersonNodes : [Person1, Person2, ...],\n               PartnershipNodes : [Partnership1, Partnership2, ...],\n               PregnancyNodes : [Pregnancy1, Pregnancy2, ...],\n               PersonGroupNodes : [PersonGroup1, PersonGroup2, ...],\n               PlaceHolderNodes : [PlaceHolder1, PlaceHolder2, ...]\n           },\n           created: [PlaceHolder1, PlaceHolder2, ...]\n        }",
                "type": "Object"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 276,
            "description": "Removes this node and all nodes that will end up disconnected from the\nProband as a result. Pushes action onto actionStack.",
            "itemtype": "method",
            "name": "removeAction",
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 386,
            "description": "Returns true if this node is related to the node with the id nodeID",
            "itemtype": "method",
            "name": "isRelatedTo",
            "params": [
                {
                    "name": "nodeID",
                    "description": "ID of any node in the graph",
                    "type": "Number"
                },
                {
                    "name": "visited",
                    "description": "A list of IDs of nodes that shouldn't be considered",
                    "type": "Array",
                    "optional": true,
                    "optdefault": "["
                }
            ],
            "return": {
                "description": "An array in the form of [result, visitedNodes]",
                "type": "Array"
            },
            "example": [
                "\n    var malePerson = editor.getGraph().addPerson(100,100, \"M\", 20);\n    var femalePerson = editor.getGraph().addPerson(300,100, \"F\", 21);\n\n    malePerson.isRelatedTo(femalePerson.getID()) // -> [false, [20]]"
            ],
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 421,
            "description": "Returns an object containing all the information about this node.",
            "itemtype": "method",
            "name": "getInfo",
            "return": {
                "description": "in the form\n\n    {\n       type: // (type of the node),\n       x:  // (x coordinate)\n       y:  // (y coordinate)\n       id: // id of the node\n    }",
                "type": "Object"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 438,
            "description": "Applies the properties found in info to this node.",
            "itemtype": "method",
            "name": "loadInfo",
            "params": [
                {
                    "name": "info",
                    "description": "Object in the form\n\n",
                    "type": "!~YUIDOC_LINE~!       type: // (type of the node),!~YUIDOC_LINE~!       x:  // (x coordinate)!~YUIDOC_LINE~!       y:  // (y coordinate)!~YUIDOC_LINE~!       id: // id of the node!~YUIDOC_LINE~!"
                }
            ],
            "return": {
                "description": "True if info was successfully loaded",
                "type": "Boolean"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 463,
            "description": "Applies properties that happen to this node when a widget (such as the menu) is closed.",
            "itemtype": "method",
            "name": "onWidgetHide",
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 474,
            "description": "Returns the childless status of this node",
            "itemtype": "method",
            "name": "getChildlessStatus",
            "return": {
                "description": "null, childless or infertile",
                "type": "Null|String"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 484,
            "description": "Returns true if the status is either 'infertile' or 'childless'",
            "itemtype": "method",
            "name": "isValidChildlessStatus",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 494,
            "description": "Returns the reason for this node's status of 'infertile' or 'childless'",
            "itemtype": "method",
            "name": "getChildlessReason",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 504,
            "description": "Changes the reason for this node's 'childless' or 'infertile' status",
            "itemtype": "method",
            "name": "setChildlessReason",
            "params": [
                {
                    "name": "reason",
                    "description": "Explanation for the condition (eg. \"By Choice\", \"Vasectomy\" etc)",
                    "type": "String"
                }
            ],
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNode.js",
            "line": 517,
            "description": "Changes the reason for this node's 'childless' or 'infertile' status and updates the action stack",
            "itemtype": "method",
            "name": "setChildlessReasonAction",
            "params": [
                {
                    "name": "reason",
                    "description": "Explanation for the condition (eg. \"By Choice\", \"Vasectomy\" etc)",
                    "type": "String"
                }
            ],
            "class": "AbstractNode"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 20,
            "description": "Returns the node for which the graphics are being drawn",
            "itemtype": "method",
            "name": "getNode",
            "return": {
                "description": "",
                "type": "AbstractNode"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 30,
            "description": "Returns the current X coordinate of this node on the canvas, taking into consideration transformation data.",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "the x coordinate",
                "type": "Number"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 40,
            "description": "Changes the X coordinate of the node",
            "itemtype": "method",
            "name": "setX",
            "params": [
                {
                    "name": "x",
                    "description": "The target x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true if you want to animate the transition",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The function called at the end of the animation",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 52,
            "description": "Returns the current Y coordinate of this node on the canvas, taking into consideration transformation data.",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "The y coordinate",
                "type": "Number"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 62,
            "description": "Changes the Y coordinate of the node",
            "itemtype": "method",
            "name": "setY",
            "params": [
                {
                    "name": "y",
                    "description": "The target y coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true if you want to animate the transition",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "callback",
                    "description": "The function called at the end of the animation",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 74,
            "description": "Returns an array containing the x and y coordinates of the node on canvas.",
            "itemtype": "method",
            "name": "getPos",
            "return": {
                "description": "in the form [x, y]",
                "type": "Array"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 84,
            "description": "Returns true if this node is selected. A selected node is a node with visible Hoverbox.",
            "itemtype": "method",
            "name": "isSelected",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 94,
            "description": "Sets this node's selected property to isSelected. A selected node is a node with visible Hoverbox.",
            "itemtype": "method",
            "name": "setSelected",
            "params": [
                {
                    "name": "isSelected",
                    "description": "True if the node is selected",
                    "type": "Boolean"
                }
            ],
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 104,
            "description": "Returns a Raphael set of all the graphics and labels associated with this node.",
            "itemtype": "method",
            "name": "getAllGraphics",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 114,
            "description": "Returns a Raphael set of graphic elements of which the icon of the node consists. Does not\ninclude hoverbox elements or labels.",
            "itemtype": "method",
            "name": "getShapes",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 125,
            "description": "Removes all the graphical elements of this node from the canvas",
            "itemtype": "method",
            "name": "remove",
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 135,
            "description": "Returns the hoverbox object for this node",
            "itemtype": "method",
            "name": "getHoverBox",
            "return": {
                "description": "",
                "type": "AbstractHoverbox"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 148,
            "description": "Returns the childless status shape for this Person",
            "itemtype": "method",
            "name": "getChildlessShape",
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 158,
            "description": "Updates the childless status icon for this Person based on the childless/infertility status.",
            "itemtype": "method",
            "name": "updateChildlessShapes",
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 196,
            "description": "Updates the childless status reason label for this Person",
            "itemtype": "method",
            "name": "updateChildlessStatusLabel",
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractNodeVisuals.js",
            "line": 216,
            "description": "Returns the Raphaël element for this Person's childless status reason label",
            "itemtype": "method",
            "name": "getChildlessStatusLabel",
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "AbstractNodeVisuals"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 26,
            "description": "Initializes the object responsible for creating graphics for this node",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate on the canvas at which the node is centered",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate on the canvas at which the node is centered",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "AbstractPersonVisuals"
            },
            "access": "private",
            "tagname": "",
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 39,
            "description": "Returns the parents' Partnership node",
            "itemtype": "method",
            "name": "getParentPartnership",
            "return": {
                "description": "null if this person has no parents",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 53,
            "description": "Returns the Pregnancy from which this node stems",
            "itemtype": "method",
            "name": "getParentPregnancy",
            "return": {
                "description": "",
                "type": "Pregnancy"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 63,
            "description": "Replaces the the parent Pregnancy associated with this node with the one passed in the parameter",
            "itemtype": "method",
            "name": "setParentPregnancy",
            "params": [
                {
                    "name": "pregnancy",
                    "description": "A Pregnancy object that has this node listed as a child",
                    "type": "Pregnancy"
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 73,
            "description": "Returns an array containing the two parents of this node.",
            "itemtype": "method",
            "name": "getParents",
            "return": {
                "description": "in the form of [parent1, parent2]. Null if this person has no parents.",
                "type": "Null|Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 86,
            "description": "Returns true if this node is a descendant of otherNode",
            "itemtype": "method",
            "name": "isDescendantOf",
            "params": [
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "Person|PlaceHolder"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 109,
            "description": "Reads a string of input and converts it into the standard gender format of \"M\",\"F\" or \"U\".\nDefaults to \"U\" if string is not recognized",
            "itemtype": "method",
            "name": "parseGender",
            "params": [
                {
                    "name": "gender",
                    "description": "The string to be parsed",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the gender in the standard form (\"M\", \"F\", or \"U\")",
                "type": "String"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 121,
            "description": "Returns \"U\", \"F\" or \"M\" depending on the gender of this node",
            "itemtype": "method",
            "name": "getGender",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 131,
            "description": "Collects gender information from twins and partners of this person",
            "itemtype": "method",
            "name": "getTwinPartnerGenders",
            "return": {
                "description": "in the form of {nodeID1 : gender1, nodeID2: gender2, ...}",
                "type": "Object"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 150,
            "description": "Updates the gender of this node and updates the\ngraphics. Updates gender of all partners and twins if it is unknown.\nReturns an array of nodes visited during the partner/twin traversal.",
            "itemtype": "method",
            "name": "setGender",
            "params": [
                {
                    "name": "gender",
                    "description": "Should be \"U\", \"F\", or \"M\" depending on the gender",
                    "type": "String"
                },
                {
                    "name": "visitedNodes",
                    "description": "An array of nodes that were visited during the traversal up until\n this node. OMIT this parameter. It is used for internal functionality.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "list of twins and partners of this node",
                "type": "Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 185,
            "description": "Changes the gender of this node to gender, and updates the gender of all twins and partners\nif they are affected. Updates the action stack.",
            "itemtype": "method",
            "name": "setGenderAction",
            "params": [
                {
                    "name": "gender",
                    "description": "Should be \"M\", \"F\", or \"U\"",
                    "type": "String"
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 205,
            "description": "Changes the adoption status of this Person to isAdopted. Updates the graphics.",
            "itemtype": "method",
            "name": "setAdopted",
            "params": [
                {
                    "name": "isAdopted",
                    "description": "Set to true if you want to mark the Person adopted",
                    "type": "Boolean"
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 230,
            "description": "Changes the adoption status of this Person to isAdopted. Updates the graphics. Updates the\naction stack.",
            "itemtype": "method",
            "name": "setAdoptedAction",
            "params": [
                {
                    "name": "isAdopted",
                    "description": "Set to true if you want to mark the Person adopted",
                    "type": "Boolean"
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 262,
            "description": "Returns true if this Person is marked adopted",
            "itemtype": "method",
            "name": "isAdopted",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 272,
            "description": "Returns true if this person has twin children",
            "itemtype": "method",
            "name": "hasTwins",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 287,
            "description": "Returns true if this person has non-adopted children",
            "itemtype": "method",
            "name": "hasNonAdoptedChildren",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 302,
            "description": "Returns an array of Partnership objects of this node",
            "itemtype": "method",
            "name": "getPartnerships",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 312,
            "description": "Returns the Partnership affiliated with partner",
            "itemtype": "method",
            "name": "getPartnership",
            "params": [
                {
                    "name": "partner",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "returns Null if this node has no Partnership with partner",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 331,
            "description": "Returns an array nodes that share a Partnership with this node",
            "itemtype": "method",
            "name": "getPartners",
            "return": {
                "description": "in the form of [partner1, partner2, ...]",
                "type": "Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 347,
            "description": "Adds a new partnership to the list of partnerships of this node",
            "itemtype": "method",
            "name": "addPartnership",
            "params": [
                {
                    "name": "partnership",
                    "description": "Should have this node as one of the partners",
                    "type": "Partnership"
                }
            ],
            "return": {
                "description": "The added Partnership or null if it couldn't be added",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 362,
            "description": "Removes partnership from the list of partnerships",
            "itemtype": "method",
            "name": "removePartnership",
            "params": [
                {
                    "name": "partnership",
                    "description": "Should have this node as one of the partners",
                    "type": "Partnership"
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 380,
            "description": "Creates a Partnership of two new Person nodes of opposite gender, and adds this node as a child of the\npartnership",
            "itemtype": "method",
            "name": "createParents",
            "return": {
                "description": "The resulting partnership between the two new parents or null if parents couldn't\nbe created",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 403,
            "description": "Sets parents to the partnership passed in the parameter, and adds this node to partnership's list of children",
            "itemtype": "method",
            "name": "addParents",
            "params": [
                {
                    "name": "partnership",
                    "description": "",
                    "type": "Partnership"
                }
            ],
            "return": {
                "description": "the partnership that was added or null if it couldn't be added",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 417,
            "description": "Sets this node as a child of a new partnership between parent and a new placeholder.",
            "itemtype": "method",
            "name": "addParent",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "resulting parent partnership. Null if 'parent' can be a parent of this person",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 433,
            "description": "Returns a string representing the opposite gender of this node (\"M\" or \"F\"). Returns \"U\"\nif the gender of this node is unknown",
            "itemtype": "method",
            "name": "getOppositeGender",
            "return": {
                "description": "\"M\", \"F\" or \"U\" depending on the gender of this person",
                "type": "String"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 452,
            "description": "Creates a new node and generates a Partnership with this node.\nReturns the Partnership.",
            "itemtype": "method",
            "name": "createPartner",
            "params": [
                {
                    "name": "isPlaceHolder",
                    "description": "set to true if the new partner should be a PlaceHolder",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "noChild",
                    "description": "set true to refrain from creating a placeholder child\nfor the resulting partnership",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "the resulting partnership",
                "type": "Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 471,
            "description": "Creates a new Partnership with partner.\nDoes not duplicate a partnership if one already exists.\nReturns the new Partnership or the preexisting partnership",
            "itemtype": "method",
            "name": "addPartner",
            "params": [
                {
                    "name": "partner",
                    "description": "",
                    "type": "Person|PlaceHolder"
                },
                {
                    "name": "noChild",
                    "description": "set true to refrain from creating a placeholder child\nfor the resulting partnership",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The added Partnership or null if partner could not be added",
                "type": "Null|Partnership"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 514,
            "description": "Returns an array of nodes that are children from all of this node's Partnerships.",
            "itemtype": "method",
            "name": "getChildren",
            "params": [
                {
                    "name": "type",
                    "description": "can be \"Person\", \"PersonGroup\" or \"PlaceHolder\".",
                    "type": "String",
                    "optional": true,
                    "multiple": true
                }
            ],
            "example": [
                "\n\n    var myPerson = editor.addPerson(100,100, \"M\", 20);\n    var child1 = editor.addPerson(200,200, \"M\", 21);\n    var child2 = editor.addPlaceHolder(300,200, \"M\", 22);\n    myPerson.addChild(child1);\n    myPerson.addChild(child2);\n\n    myPerson.getChildren(\"PlaceHolder\", \"Person\") // -> [child2, child1]"
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 538,
            "description": "Returns true if this person is a parent of non-placeholder children.",
            "itemtype": "method",
            "name": "hadChildren",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 548,
            "description": "Creates node of type nodeType and gender nodeGender and a partnership with a new placeholder. Sets\nthe child as a child of this partnership.",
            "itemtype": "method",
            "name": "createChild",
            "params": [
                {
                    "name": "nodeType",
                    "description": "The type for the new child. (eg. \"Person\", \"PlaceHolder\", \"PersonGroup\")",
                    "type": "String"
                },
                {
                    "name": "nodeGender",
                    "description": "Can be \"M\", \"F\" or \"U\".",
                    "type": "String"
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 560,
            "description": "Creates a partnership with a new placeholder node and adds childNode to as a child of this partnership.",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "childNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "the child node or null in case of error",
                "type": "Null|AbstractPerson"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 576,
            "description": "Returns all the nodes that come from the parent pregnancy.",
            "itemtype": "method",
            "name": "getTwins",
            "params": [
                {
                    "name": "type",
                    "description": "The type for the new child. (eg. \"Person\", \"PlaceHolder\", \"PersonGroup\")",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List of AbstractPerson objects.",
                "type": "Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 587,
            "description": "Returns true if this node is a parent of otherNode",
            "itemtype": "method",
            "name": "isParentOf",
            "params": [
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "PlaceHolder|Person"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 598,
            "description": "Returns true if this node is an ancestor of otherNode",
            "itemtype": "method",
            "name": "isAncestorOf",
            "params": [
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "Person|PlaceHolder"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 609,
            "description": "Returns true if this node is a partner of otherNode",
            "itemtype": "method",
            "name": "isPartnerOf",
            "params": [
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "Person|PlaceHolder"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 626,
            "description": "Returns true if this node can have a heterosexual Partnership with otherNode",
            "itemtype": "method",
            "name": "canPartnerWith",
            "params": [
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "Person|PlaceHolder"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 641,
            "description": "Returns true if this node can be a parent of otherNode",
            "itemtype": "method",
            "name": "canBeParentOf",
            "params": [
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 656,
            "description": "Breaks connections with all related nodes and removes this node from\nthe record.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "isRecursive",
                    "description": "set to true to remove all nodes that will result in being unrelated to the proband",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "skipConfirmation",
                    "description": "if true, no confirmation box will pop up",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "in the form\n\n    {\n    confirmed: true/false,\n    affected: {\n    PersonNodes : [Person1, Person2, ...],\n    PartnershipNodes : [Partnership1, Partnership2, ...],\n    PregnancyNodes : [Pregnancy1, Pregnancy2, ...],\n    PersonGroupNodes : [PersonGroup1, PersonGroup2, ...],\n    PlaceHolderNodes : [PlaceHolder1, PlaceHolder2, ...]\n    },\n    created: [PlaceHolder1, PlaceHolder2, ...]\n    }",
                "type": "Object"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 693,
            "description": "Returns all of this node's Partnerships",
            "itemtype": "method",
            "name": "getSideNeighbors",
            "return": {
                "description": "in the form of [Partnership1, Partnership2, ...]",
                "type": "Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 703,
            "description": "Returns an array with the number of partnerships between this node and otherNode, and the nodes visited\nin the process of the traversal",
            "itemtype": "method",
            "name": "getStepsToNode",
            "params": [
                {
                    "name": "otherNode",
                    "description": "The node whose distance (in partnerships) from this node you're trying to calculate",
                    "type": "AbstractNode"
                },
                {
                    "name": "visitedNodes",
                    "description": "An array of nodes that were visited in the result of the traversal. This parameter is used\ninternally so omit it when calling the function",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 733,
            "description": "Returns the parent's Partnership",
            "itemtype": "method",
            "name": "getUpperNeighbors",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 743,
            "description": "Returns an object containing all the information about this node.",
            "itemtype": "method",
            "name": "getInfo",
            "return": {
                "description": "in the form\n\n    {\n    type: // (type of the node),\n    x:  // (x coordinate)\n    y:  // (y coordinate)\n    id: // id of the node\n    gender: //gender of the node\n    }",
                "type": "Object"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPerson.js",
            "line": 763,
            "description": "Applies the properties found in info to this node.",
            "itemtype": "method",
            "name": "loadInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "info",
                    "description": "Object in the form\n\n",
                    "type": "!~YUIDOC_LINE~!    type: // (type of the node),!~YUIDOC_LINE~!    x:  // (x coordinate)!~YUIDOC_LINE~!    y:  // (y coordinate)!~YUIDOC_LINE~!    id: // id of the node!~YUIDOC_LINE~!    gender: //gender of the node!~YUIDOC_LINE~!"
                }
            ],
            "return": {
                "description": "true if info was successfully loaded",
                "type": "Boolean"
            },
            "class": "AbstractPerson"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 29,
            "description": "Returns the Raphael element representing the gender of the node.",
            "itemtype": "method",
            "name": "getIcon",
            "return": {
                "description": "Raphael element",
                "type": "Raphael.st | Raphael.el"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 39,
            "description": "Updates the icon representing the gender of the node",
            "itemtype": "method",
            "name": "setIcon",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 49,
            "description": "Changes the position of the node to (X,Y)",
            "itemtype": "method",
            "name": "setPos",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true if you want to animate the transition",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "The function called at the end of the animation",
                    "type": "Function"
                }
            ],
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 76,
            "description": "Saves the x and y values as current coordinates and updates connections with the new position",
            "itemtype": "method",
            "name": "_updatePositionData",
            "params": [
                {
                    "name": "x",
                    "description": "The new x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The new y coordinate",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 90,
            "description": "Returns the distance from the center of the genderSymbol to the rightmost point of the shape.",
            "itemtype": "method",
            "name": "getRadius",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 100,
            "description": "Returns the box around the element that appears when the node is highlighted",
            "itemtype": "method",
            "name": "getHighlightBox",
            "return": {
                "description": "Raphael rectangle element",
                "type": "Raphael.rect"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 110,
            "description": "Displays the highlightBox around the node",
            "itemtype": "method",
            "name": "highlight",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 119,
            "description": "Draws brackets around the node icon to show that this node is adopted",
            "itemtype": "method",
            "name": "drawAdoptedShape",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 138,
            "description": "Removes the brackets around the node icon that show that this node is adopted",
            "itemtype": "method",
            "name": "removeAdoptedShape",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 147,
            "description": "Returns the raphael element or set containing the adoption shape",
            "itemtype": "method",
            "name": "getAdoptedShape",
            "return": {
                "description": "Raphael Element",
                "type": "Raphael.el"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 157,
            "description": "Hides the highlightBox around the node",
            "itemtype": "method",
            "name": "unHighlight",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 166,
            "description": "Returns a Raphael set or element that contains the graphics associated with this node, excluding the labels.",
            "itemtype": "method",
            "name": "getShapes",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 177,
            "description": "Returns a Raphael set that contains all the graphics and labels associated with this node.",
            "itemtype": "method",
            "name": "getAllGraphics",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 187,
            "description": "Returns the Raphael element representing the gender of the node.",
            "itemtype": "method",
            "name": "getGenderSymbol",
            "return": {
                "description": "Raphael set or Raphael element",
                "type": "Raphael.st|Raphael.el"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 197,
            "description": "Returns only the shape element from the genderSymbol",
            "itemtype": "method",
            "name": "getGenderShape",
            "return": {
                "description": "",
                "type": "Raphael.st|Raphael.el"
            },
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/abstractPersonVisuals.js",
            "line": 207,
            "description": "Sets/replaces the gender symbol with the symbol appropriate for the gender.s",
            "itemtype": "method",
            "name": "setGenderSymbol",
            "class": "AbstractPersonVisuals"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 14,
            "description": "Returns the array implementation of the action stack",
            "itemtype": "method",
            "name": "getStack",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 24,
            "description": "Replaces the current stack with newStack",
            "itemtype": "method",
            "name": "setStack",
            "params": [
                {
                    "name": "newStack",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 34,
            "description": "Returns the index of the current state of the application",
            "itemtype": "method",
            "name": "getIndex",
            "return": {
                "description": "l",
                "type": "Number"
            },
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 44,
            "description": "Changes the index of the current state of the application to newIndex",
            "itemtype": "method",
            "name": "setIndex",
            "params": [
                {
                    "name": "newIndex",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 54,
            "description": "Moves one state forward in the action stack",
            "itemtype": "method",
            "name": "redo",
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 78,
            "description": "Moves one state backwards in the action stack",
            "itemtype": "method",
            "name": "undo",
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 104,
            "description": "Pushes a new state to the front of the action stack",
            "itemtype": "method",
            "name": "push",
            "params": [
                {
                    "name": "el",
                    "description": "Such that el.undo and el.redo are functions"
                }
            ],
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 119,
            "description": "Starts an action grouping in the stack",
            "itemtype": "method",
            "name": "pushStartMarker",
            "return": {
                "description": "The id of the action group",
                "type": "Number"
            },
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 133,
            "description": "Closes action grouping with id markerID in the stack",
            "itemtype": "method",
            "name": "pushEndMarker",
            "params": [
                {
                    "name": "markerID",
                    "description": "ID of the action group",
                    "type": "Number"
                }
            ],
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 144,
            "description": "Returns ID of the action group with the largest ID",
            "itemtype": "method",
            "name": "getMaxMarkerID",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 154,
            "description": "Sets newID as the largest action group ID",
            "itemtype": "method",
            "name": "setMaxMarkerID",
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 163,
            "description": "Pops the front element of the stack",
            "itemtype": "method",
            "name": "pop",
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 173,
            "description": "Returns the front element of the stack",
            "itemtype": "method",
            "name": "peek",
            "return": {
                "description": "",
                "type": "Null|Object"
            },
            "class": "ActionStack"
        },
        {
            "file": "pedigree/actionStack.js",
            "line": 183,
            "description": "Returns the number of elements in the stack",
            "itemtype": "method",
            "name": "size",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ActionStack"
        },
        {
            "file": "pedigree/ageCalc.js",
            "line": 1,
            "description": "Returns the age of a person with the given birth and death dates",
            "params": [
                {
                    "name": "birthDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "deathDate",
                    "description": "",
                    "type": "Date",
                    "optional": true
                }
            ],
            "return": {
                "description": "Age formatted with years, months, days",
                "type": "String"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 24,
            "description": "Returns a map node IDs to nodes",
            "itemtype": "method",
            "name": "getNodeMap",
            "return": {
                "description": "\n\n    {\n       {nodeID} : {AbstractNode}\n    }",
                "type": "Object"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 38,
            "description": "Returns the node that is currently selected",
            "itemtype": "method",
            "name": "getCurrentHoveredNode",
            "return": {
                "description": "",
                "type": "AbstractNode"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 48,
            "description": "Changes currentHoveredNode to the specified node.",
            "itemtype": "method",
            "name": "getCurrentHoveredNode",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "AbstractNode"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 58,
            "description": "Returns the currently dragged element",
            "itemtype": "method",
            "name": "getCurrentDraggable",
            "return": {
                "description": "Either a handle from a hoverbox, or a PlaceHolder"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 68,
            "description": "Returns the Object that is currently being dragged",
            "itemtype": "method",
            "name": "setCurrentDraggable",
            "params": [
                {
                    "name": "draggable",
                    "description": "A handle or a PlaceHolder"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 78,
            "description": "Generates an id for a node",
            "itemtype": "method",
            "name": "generateID",
            "return": {
                "description": "A unique id",
                "type": "Number"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 88,
            "description": "Returns the highest generated id in this graph",
            "itemtype": "method",
            "name": "getIdCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 98,
            "description": "Sets the highest generated id to maxID",
            "itemtype": "method",
            "name": "setIdCount",
            "params": [
                {
                    "name": "maxID",
                    "description": ""
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 108,
            "description": "Returns the Proband node",
            "itemtype": "method",
            "name": "getProband",
            "return": {
                "description": "",
                "type": "Person"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 118,
            "description": "Returns a list containing all the nodes in the graph",
            "itemtype": "method",
            "name": "getAllNodes",
            "return": {
                "description": "A list containing all nodes. The last element in the proband.",
                "type": "Array"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 134,
            "description": "Deletes all nodes except the proband.",
            "itemtype": "method",
            "name": "clearGraph",
            "params": [
                {
                    "name": "removeProband",
                    "description": "If True, the proband is deleted as well.",
                    "type": "Boolean"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 148,
            "description": "Removes all nodes except the proband and adds this action to the action stack.",
            "itemtype": "method",
            "name": "clearGraphAction",
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 168,
            "description": "Creates a Partnership and adds it to index of nodes.",
            "itemtype": "method",
            "name": "addPartnership",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "node1",
                    "description": "The first node in the partnership",
                    "type": "AbstractNode"
                },
                {
                    "name": "node2",
                    "description": "The second node in the partnership",
                    "type": "AbstractNode"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Partnership"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 187,
            "description": "Removes partnership from index of nodes",
            "itemtype": "method",
            "name": "removePartnership",
            "params": [
                {
                    "name": "partnership",
                    "description": ""
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 198,
            "description": "Returns list containing all the pregnancy nodes in the graph",
            "itemtype": "method",
            "name": "getPregnancyNodes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 208,
            "description": "Returns list containing all the Person nodes in the graph",
            "itemtype": "method",
            "name": "getPersonNodes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 218,
            "description": "Returns list containing all the PlaceHolder nodes in the graph",
            "itemtype": "method",
            "name": "getPlaceHolderNodes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 228,
            "description": "Returns list containing all the Partnership nodes in the graph",
            "itemtype": "method",
            "name": "getPartnershipNodes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 238,
            "description": "Returns list containing all the PersonGroup nodes in the graph",
            "itemtype": "method",
            "name": "getPersonGroupNodes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 248,
            "description": "Creates a Person in the graph and returns it",
            "itemtype": "method",
            "name": "addPerson",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "Can be \"M\", \"F\", or \"U\"",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Person"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 274,
            "description": "Creates a PlaceHolder in the graph and returns it",
            "itemtype": "method",
            "name": "addPlaceHolder",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "Can be \"M\", \"F\", or \"U\"",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "PlaceHolder"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 292,
            "description": "Removes given PlaceHolder node from node index (Does not delete the node visuals).",
            "itemtype": "method",
            "name": "removePlaceHolder",
            "params": [
                {
                    "name": "placeholder",
                    "description": "",
                    "type": "PlaceHolder"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 303,
            "description": "Creates a PersonGroup in the graph and returns it",
            "itemtype": "method",
            "name": "addPersonGroup",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "Can be \"M\", \"F\", or \"U\"",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "PersonGroup"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 321,
            "description": "Removes given PersonGroup node from node index (Does not delete the node visuals).",
            "itemtype": "method",
            "name": "removePersonGroup",
            "params": [
                {
                    "name": "groupNode",
                    "description": "",
                    "type": "PersonGroup"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 332,
            "description": "Creates a Pregnancy node in the graph and returns it",
            "itemtype": "method",
            "name": "addPregnancy",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate for the node",
                    "type": "Number"
                },
                {
                    "name": "partnership",
                    "description": "The Partnership that has this pregnancy",
                    "type": "Partnership"
                },
                {
                    "name": "id",
                    "description": "The id of the node",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Pregnancy"
            },
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 350,
            "description": "Removes given Pregnancy node from node index (Does not delete the node visuals).",
            "itemtype": "method",
            "name": "removePregnancy",
            "params": [
                {
                    "name": "pregnancy",
                    "description": "",
                    "type": "Pregnancy"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 361,
            "description": "Enters hover-mode state, which is when a handle or a PlaceHolder is being dragged around the screen",
            "itemtype": "method",
            "name": "enterHoverMode",
            "params": [
                {
                    "name": "sourceNode",
                    "description": "The node whose handle is being dragged, or the placeholder that is being dragged"
                },
                {
                    "name": "hoverTypes",
                    "description": "An array of strings containing the types of nodes that \"react\" to the sourceNode being\ndragged on top of them.",
                    "type": "Array"
                }
            ],
            "class": "Graph"
        },
        {
            "file": "pedigree/graph.js",
            "line": 427,
            "description": "Exits hover-mode state, which is when a handle or a PlaceHolder is being dragged around the screen",
            "itemtype": "method",
            "name": "exitHoverMode",
            "class": "Graph"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 1,
            "description": "Returns a raphael element representing a Pi-Chart-like slice of the icon representing the given gender",
            "params": [
                {
                    "name": "canvas",
                    "description": "Raphael paper object"
                },
                {
                    "name": "xPosition",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "yPosition",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "radius",
                    "description": "Radius of the associated shape",
                    "type": "Number"
                },
                {
                    "name": "gender",
                    "description": "Can be \"M\", \"F\" or \"U\"",
                    "type": "String"
                },
                {
                    "name": "startAngle",
                    "description": "Has to be equal or greater than 0",
                    "type": "Number"
                },
                {
                    "name": "endAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "color",
                    "description": "CSS color",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 112,
            "description": "Creates a 3D looking orb",
            "itemtype": "method",
            "name": "generateOrb",
            "params": [
                {
                    "name": "canvas",
                    "description": "Raphael paper"
                },
                {
                    "name": "x",
                    "description": "X coordinate for the orb",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate for the orb",
                    "type": "Number"
                },
                {
                    "name": "r",
                    "description": "Radius of the orb",
                    "type": "Number"
                },
                {
                    "name": "hue",
                    "description": "Hue value between 0 and 1",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 131,
            "description": "Joins all the subsets into one set and returns it.",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 143,
            "description": "Returns set containing the given element",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 151,
            "description": "Returns a set containing the elements of this set and the given set. Doesn't modify the original sets.",
            "params": [
                {
                    "name": "set",
                    "description": "",
                    "type": "Raphael.st"
                }
            ],
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 169,
            "description": "Returns True if this set contains target. Target has to be directly in this set, and not in a subset.",
            "params": [
                {
                    "name": "target",
                    "description": "",
                    "type": "Raphael.st|Raphael.el"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/graphicHelpers.js",
            "line": 185,
            "description": "Returns a new set containing the same elements as this set",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/groupHoverbox.js",
            "line": 20,
            "description": "Creates the buttons used in this hoverbox",
            "itemtype": "method",
            "name": "generateButtons",
            "return": {
                "description": "A set of buttons",
                "type": "Raphael.st"
            },
            "class": "GroupHoverbox"
        },
        {
            "file": "pedigree/kdTree.js",
            "line": 1,
            "description": "Position tree. This stuff is black magic - be careful how you use it",
            "class": "Legend"
        },
        {
            "file": "pedigree/layout.js",
            "line": 1,
            "description": "Class responsible for the graph layout.",
            "class": "Legend"
        },
        {
            "file": "pedigree/layout.js",
            "line": 10,
            "description": "Generate the perfect layout for this graph",
            "class": "Legend"
        },
        {
            "file": "pedigree/layout.js",
            "line": 20,
            "description": "Build the skeleton for the layout - the specification for the hierarchy of nodes",
            "return": {
                "description": ""
            },
            "access": "private",
            "tagname": "",
            "class": "Legend"
        },
        {
            "file": "pedigree/layout.js",
            "line": 52,
            "description": "Repositions the nodes in a hierarchical layout",
            "params": [
                {
                    "name": "abstractGraph",
                    "description": "The specification for the hierarchy of nodes."
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Legend"
        },
        {
            "file": "pedigree/layout.js",
            "line": 60,
            "description": "Modifies the layout to fix overlapping edges in the graph",
            "params": [
                {
                    "name": "abstractGraph",
                    "description": "The specification for the hierarchy of nodes."
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 36,
            "description": "Returns an object of disorder IDs mapped to their names.",
            "itemtype": "method",
            "name": "getDisorders",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 46,
            "description": "Returns an object of disorder IDs mapped to a list of IDs of nodes who have this disorder",
            "itemtype": "method",
            "name": "getAffectedNodes",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 56,
            "description": "Returns an object of evaluation ID's mapped to the evaluation properties.",
            "itemtype": "method",
            "name": "getEvaluations",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 66,
            "description": "Replaces the evaluation map with the map passed in the parameter, and updates\nthe graphical 'Legend' to represent the new information",
            "itemtype": "method",
            "name": "setEvaluations",
            "params": [
                {
                    "name": "map",
                    "description": "Formatted as follows:\n\n    ,\n       ...\n    }",
                    "type": "!~YUIDOC_LINE~!       E1 : conclusion: '+', result: '(36n/18n)', numAEvaluations: 4"
                }
            ],
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 83,
            "description": "Registers an occurrence of a disorder. If disorder hasn't been documented yet,\ndesignates a color for it.",
            "itemtype": "method",
            "name": "addCase",
            "params": [
                {
                    "name": "disorderID",
                    "description": "ID for this disorder taken from the OMIM database",
                    "type": "Number|String"
                },
                {
                    "name": "disorderName",
                    "description": "The name of the disorder",
                    "type": "String"
                },
                {
                    "name": "nodeID",
                    "description": "ID of the Person who has this disorder",
                    "type": "Number"
                }
            ],
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 111,
            "description": "Removes an occurrence of a disorder if there are any. Removes the disorder\nfrom the 'Legend' box if this disorder is not registered in any individual.",
            "params": [
                {
                    "name": "disorderID",
                    "description": "ID for this disorder taken from the OMIM database",
                    "type": "Number|String"
                },
                {
                    "name": "nodeID",
                    "description": "ID of the Person who has this disorder",
                    "type": "Number"
                }
            ],
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 138,
            "description": "Updates the displayed number of affected cases for for a disorder in the legend UI.",
            "itemtype": "method",
            "name": "__displayCasesForDisorder",
            "params": [
                {
                    "name": "disorderID",
                    "description": "The identifier of the disorder to update",
                    "type": "String|Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 153,
            "description": "Returns True if the disorder with the given ID is registered in the Legend",
            "itemtype": "method",
            "name": "containsDisorder",
            "params": [
                {
                    "name": "disorderID",
                    "description": "The id for the disorder, taken from the OMIM database",
                    "type": "String|Number"
                }
            ],
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 163,
            "description": "Retrieve the color associated to a specific disorder",
            "itemtype": "method",
            "name": "getDisorderColor",
            "params": [
                {
                    "name": "disorderID",
                    "description": "The id for the disorder, taken from the OMIM database",
                    "type": "String|Number"
                }
            ],
            "return": {
                "description": "CSS color value for that disorder",
                "type": "String"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 174,
            "description": "Returns an object with disorder IDs mapped to CSS colors",
            "itemtype": "method",
            "name": "getDisorderColors",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 184,
            "description": "Generate the element that will display information about the given disorder in the legend",
            "itemtype": "method",
            "name": "generateDisorderElement",
            "params": [
                {
                    "name": "id",
                    "description": "The id for the disorder, taken from the OMIM database",
                    "type": "String|Number"
                },
                {
                    "name": "name",
                    "description": "The human-readable disorder name",
                    "type": "String"
                },
                {
                    "name": "color",
                    "description": "CSS color associated with the disorder, displayed on affected nodes in the pedigree",
                    "type": "String"
                }
            ],
            "return": {
                "description": "List element to be insert in the legend",
                "type": "HTMLLIElement"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 236,
            "description": "Callback for dragging a disorder from the legend onto-nodes",
            "itemtype": "method",
            "name": "_onDropDisorder",
            "params": [
                {
                    "name": "disorderLabel",
                    "description": "",
                    "type": "HTMLElement",
                    "optional": true
                },
                {
                    "name": "target",
                    "description": "",
                    "type": "HTMLElement",
                    "optional": true
                },
                {
                    "name": "event",
                    "description": "",
                    "type": "Event",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Legend"
        },
        {
            "file": "pedigree/legend.js",
            "line": 257,
            "description": "Generates a CSS color. Has preference for 5 colors that can be distinguished in gray-scale.",
            "itemtype": "method",
            "name": "generateColor",
            "return": {
                "description": "CSS color",
                "type": "String"
            },
            "class": "Legend"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 42,
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 47,
            "description": "Initialize the node index",
            "params": [
                {
                    "name": "nodes",
                    "description": "optional set of nodes to insert in the index upon its creation"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 90,
            "description": "[Internal method] return the closest position in the grid for a 2D point",
            "params": [
                {
                    "name": "point",
                    "description": "an object with two mandatory numeric fields, x and y"
                }
            ],
            "return": {
                "description": "an object with two numeric fields, x and y, the point in the grid that is closest to the inpput"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 100,
            "description": "Find the best position to insert one or more new neighbors for an existing node",
            "params": [
                {
                    "name": "relativePosition",
                    "description": "an object with one field, which can be either 'above', 'below', 'side', or 'join', whose value indicated the id of a node"
                },
                {
                    "name": "identifiers",
                    "description": "an array of new ids for which positions must be found"
                }
            ],
            "return": {
                "description": "an object where each field is one of the ids given as input, and the value is the point where that node should be placed"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 180,
            "description": "Registers a new node in the index",
            "params": [
                {
                    "name": "node",
                    "description": "the node to register"
                },
                {
                    "name": "source",
                    "description": "the node that \"generated\" the node to add"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 210,
            "description": "[Internal method] inserts a node in one of the dimension indexes, xIndex or yIndex.",
            "params": [
                {
                    "name": "dimension",
                    "description": "expects 'x' or 'y'"
                },
                {
                    "name": "node",
                    "description": "the node to insert"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 228,
            "description": "[Internal method] Retrieves all the nodes on a certain line or column of the grid",
            "params": [
                {
                    "name": "dimension",
                    "description": "expects 'x' or 'y'"
                },
                {
                    "name": "value",
                    "description": "the value for the given dimension"
                }
            ],
            "return": {
                "description": "an array of nodes"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 239,
            "description": "Update the index after having performed node moves",
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 280,
            "description": "[Internal method] Updates the index after adding a new node as another node's child.",
            "params": [
                {
                    "name": "node",
                    "description": "the added node"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 304,
            "description": "[Internal method] Updates the index after adding a new node as another node's partner.",
            "params": [
                {
                    "name": "node",
                    "description": "the added node"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 340,
            "description": "[Internal method] Updates the index after adding a nodes as another node's parents.",
            "params": [
                {
                    "name": "node",
                    "description": "the added partnerships node"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 398,
            "description": "[Internal method] Updates the positions of all the nodes in a row when a node in that row was added or removed.",
            "params": [
                {
                    "name": "node",
                    "description": "the modified node"
                },
                {
                    "name": "length",
                    "description": "the distance to shift with"
                },
                {
                    "name": "ignore",
                    "description": "a map of nodes which should not be moved or traversed"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 421,
            "description": "[Internal method] Updates the positions of all the nodes related to a recently moved node",
            "params": [
                {
                    "name": "node",
                    "description": "the modified node"
                },
                {
                    "name": "length",
                    "description": "the distance to shift with"
                },
                {
                    "name": "ignore",
                    "description": "a map of nodes which should not be moved or traversed"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 478,
            "description": "[Internal method] Updates the vertical ordering of nodes whenever a higher node is becomes the child of a lower one.",
            "params": [
                {
                    "name": "upperNode",
                    "description": "the parent node"
                },
                {
                    "name": "lowerNode",
                    "description": "the child node"
                }
            ],
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 490,
            "description": "Remove a node from the index",
            "params": [
                {
                    "name": "node",
                    "description": "the removed node"
                }
            ],
            "return": {
                "description": "node the removed node"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 508,
            "description": "Move a node to a diferent position",
            "params": [
                {
                    "name": "node",
                    "description": "the node to move"
                },
                {
                    "name": "x",
                    "description": "the new horizontal coordinate"
                },
                {
                    "name": "y",
                    "description": "the new vertical coordinate"
                }
            ],
            "return": {
                "description": "true if the move was successful, false otherwise"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 526,
            "description": "Move a node to a different position, indicated by relative coordinates",
            "params": [
                {
                    "name": "node",
                    "description": "the node to move"
                },
                {
                    "name": "dx",
                    "description": "the horizontal distance to the new position"
                },
                {
                    "name": "dy",
                    "description": "the vertical distance to the new position"
                }
            ],
            "return": {
                "description": "true if the move was successful, false otherwise"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 537,
            "description": "[Internal method] Retrieves the indexed node matching the input",
            "params": [
                {
                    "name": "node",
                    "description": "the node to search in the index"
                }
            ],
            "return": {
                "description": "the matching node from the index"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 552,
            "description": "Retrieves the node indexed for a given id",
            "params": [
                {
                    "name": "id",
                    "description": ""
                }
            ],
            "return": {
                "description": "node indexed for id or undefined"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 561,
            "description": "Retrieves the node indexed for a given position",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "node indexed for the position or undefined"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 571,
            "description": "Retrieves the node in the grid point closest to the input coordinates",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                }
            ],
            "return": {
                "description": "node indexed for the position or undefined"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 582,
            "description": "Checks if an id is registered in the index",
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 589,
            "description": "[Internal method] Find the leftmost and rightmost x coordinate of nodes horizontally connected to a given node",
            "params": [
                {
                    "name": "node",
                    "description": "the node for which the group is measured"
                },
                {
                    "name": "_visited",
                    "description": "optional map of already visited nodes, which should be ignored"
                },
                {
                    "name": "_limits",
                    "description": "optional object  containg the limits computed so far",
                    "type": "High: number, low: number"
                }
            ],
            "return": {
                "description": "an object  containing the computed limits",
                "type": "High: number, low: number"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 619,
            "description": "[Internal method] Find the distance between leftmost and rightmost x coordinate of nodes horizontally connected to a given node",
            "params": [
                {
                    "name": "node",
                    "description": "the node for which the group is measured"
                }
            ],
            "return": {
                "description": "a number representing the distance between leftmost and rightmost x coordinate of the group"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 629,
            "description": "[Internal method] Find the leftmost and rightmost x coordinate of the lower neighbors of a node",
            "params": [
                {
                    "name": "node",
                    "description": "the node for which the group is measured"
                }
            ],
            "return": {
                "description": "an object  containing the computed limits",
                "type": "High: number, low: number"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodeIndex.js",
            "line": 645,
            "description": "[Internal method] Find the distance between leftmost and rightmost x coordinate of the lower neighbors of a node",
            "params": [
                {
                    "name": "node",
                    "description": "the node for which the group is measured"
                }
            ],
            "return": {
                "description": "a number representing the distance between leftmost and rightmost x coordinate of the group"
            },
            "class": "NodeMenu"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 101,
            "description": "Creates a button in the bubble corresponding do the definition from the skeleton",
            "itemtype": "method",
            "name": "_createOption",
            "params": [
                {
                    "name": "data",
                    "description": "The definition object from the bubble skeleton"
                }
            ],
            "return": {
                "description": "The span containing the button",
                "type": "HTMLElement"
            },
            "access": "private",
            "tagname": "",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 132,
            "description": "Creates an arrow button that expands or shrinks the bubble",
            "itemtype": "method",
            "name": "generateExpandArrow",
            "params": [
                {
                    "name": "data",
                    "description": "The definition object from the bubble skeleton"
                }
            ],
            "return": {
                "description": "The span containing the button",
                "type": "HTMLElement"
            },
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 171,
            "description": "Creates a line to separate buttons in the bubble",
            "itemtype": "method",
            "name": "_generateSeparator",
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "access": "private",
            "tagname": "",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 182,
            "description": "Repositions the bubble to the given coordinates coordinates",
            "itemtype": "method",
            "name": "_positionAt",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate in the viewport",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in the viewport",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 207,
            "description": "Displays the bubble for the specified node",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "node",
                    "description": "The node for which the bubble is displayed",
                    "type": "AbstractNode"
                },
                {
                    "name": "x",
                    "description": "The x coordinate in the viewport",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate in the viewport",
                    "type": "Number"
                }
            ],
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 231,
            "description": "Hides the bubble from the viewport",
            "itemtype": "method",
            "name": "hide",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 253,
            "description": "Hides the bubble if the user clicks outside",
            "itemtype": "method",
            "name": "_onClickOutside",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 268,
            "description": "Returns true if the bubble is currently visible",
            "itemtype": "method",
            "name": "isActive",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 278,
            "description": "Decrement the number of nodes to be created",
            "itemtype": "method",
            "name": "_decrementNumNodes",
            "return": {
                "description": "The resulting number of nodes to be created",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 289,
            "description": "Increment the number of nodes to be created",
            "itemtype": "method",
            "name": "_incrementNumNodes",
            "return": {
                "description": "The resulting number of nodes to be created",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 300,
            "description": "Expand the bubble and show additional options for creation of PersonGroup nodes",
            "itemtype": "method",
            "name": "expandPersonGroup",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/nodetypeSelectionBubble.js",
            "line": 345,
            "description": "Expand the bubble and show additional options for creation of twin nodes",
            "itemtype": "method",
            "name": "expandTwins",
            "class": "NodetypeSelectionBubble"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 30,
            "description": "Generates and returns an instance of PartnershipVisuals",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate of this partnership",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate of this partnership",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "PartnershipVisuals"
            },
            "access": "private",
            "tagname": "",
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 43,
            "description": "Returns an array containing the two partners. Partners are AbstractPerson objects",
            "itemtype": "method",
            "name": "getPartners",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 53,
            "description": "Returns the female partner in the partnership. Returns null if none of the parents are female",
            "itemtype": "method",
            "name": "getMother",
            "return": {
                "description": "",
                "type": "AbstractPerson"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 71,
            "description": "Returns the male partner in the partnership. Returns null if none of the parents are male",
            "itemtype": "method",
            "name": "getFather",
            "return": {
                "description": "",
                "type": "AbstractPerson"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 89,
            "description": "Returns the partner of someNode if someNode is a partner in this relationship. Otherwise, returns null.",
            "itemtype": "method",
            "name": "getPartnerOf",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 108,
            "description": "Returns True if someNode is a partner in this relationship.",
            "itemtype": "method",
            "name": "contains",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractNode"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 118,
            "description": "Returns an array of pregnancies stemming from this partnership.",
            "itemtype": "method",
            "name": "getPregnancies",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 128,
            "description": "Returns an array of nodes that are children of this partnership",
            "itemtype": "method",
            "name": "getChildren",
            "params": [
                {
                    "name": "type",
                    "description": "Filter nodes to the specified type (eg. \"PlaceHolder\", \"Person\", etc)\nMultiple types can be passed (eg. getChildren(type1, type2,...,typeN)",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 144,
            "description": "Returns true if someNode is a child of this partnership.",
            "itemtype": "method",
            "name": "hasChild",
            "params": [
                {
                    "name": "someNode",
                    "description": "is an AbstractPerson",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 162,
            "description": "Creates and returns a new Pregnancy for this partnership",
            "itemtype": "method",
            "name": "createPregnancy",
            "return": {
                "description": "\nTODO: use layout algo to generate position for the pregnancy",
                "type": "Pregnancy"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 175,
            "description": "Adds pregnancy to list of pregnancies associated with this partnership",
            "itemtype": "method",
            "name": "addPregnancy",
            "params": [
                {
                    "name": "pregnancy",
                    "description": "",
                    "type": "Pregnancy"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 194,
            "description": "Removes pregnancy from the list of pregnancies associated with this partnership",
            "itemtype": "method",
            "name": "removePregnancy",
            "params": [
                {
                    "name": "pregnancy",
                    "description": "",
                    "type": "Pregnancy"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 208,
            "description": "Returns true if this partnership has given pregnancy",
            "itemtype": "method",
            "name": "hasPregnancy",
            "params": [
                {
                    "name": "pregnancy",
                    "description": "",
                    "type": "Pregnancy"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 225,
            "description": "Creates a new pregnancy and a new child for that pregnancy.",
            "itemtype": "method",
            "name": "createChild",
            "params": [
                {
                    "name": "type",
                    "description": "(eg. \"Person\", \"PlaceHolder\", etc)",
                    "type": "String"
                },
                {
                    "name": "gender",
                    "description": "\"M\", \"F\", or \"U\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The created child",
                "type": "AbstractPerson"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 247,
            "description": "Creates child for this partnership and adds action to action stack",
            "itemtype": "method",
            "name": "createNodeAction",
            "params": [
                {
                    "name": "type",
                    "description": "(eg. \"Person\", \"PlaceHolder\", etc)",
                    "type": "String"
                },
                {
                    "name": "gender",
                    "description": "\"M\", \"F\", or \"U\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The created child",
                "type": "AbstractPerson"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 307,
            "description": "Adds someNode to the list of children of this partnership, and stores this partnership\nas it's parent partnership.",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "The added child or null if child could not be added",
                "type": "Null|AbstractPerson"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 330,
            "description": "Adds child to this partnership and creates an action stack entry",
            "itemtype": "method",
            "name": "addChildAction",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 359,
            "description": "Removes someNode from the list of children of this partnership, and removes this partnership as its parents\nreference. Returns someNode.",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 374,
            "description": "Changes the status of this partnership. Nullifies the status if the given status is not\n\"childless\" or \"infertile\".",
            "itemtype": "method",
            "name": "setChildlessStatus",
            "params": [
                {
                    "name": "status",
                    "description": "Can be \"childless\", \"infertile\" or null",
                    "type": "String"
                },
                {
                    "name": "ignoreChildren",
                    "description": "If True, changing the status will not detach any children",
                    "type": "Boolean"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 401,
            "description": "Returns True if this partnership has any children coming from the same pregnancy",
            "itemtype": "method",
            "name": "hasTwins",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 417,
            "description": "Returns True if this partnership has any children that are not adopted",
            "itemtype": "method",
            "name": "hasNonAdoptedChildren",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 432,
            "description": "Removes this partnership and all the visuals attached to it from the graph.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "isRecursive",
                    "description": "Set to True to remove all pregnancies and children, unless they have some other\nconnection to the Proband",
                    "type": "Boolean"
                },
                {
                    "name": "skipConfirmation",
                    "description": "If True, will not display a confirmation dialogue",
                    "type": "Boolean"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 460,
            "description": "Returns an array of all adjacent nodes (neighbors) located below this node.",
            "itemtype": "method",
            "name": "getLowerNeighbors",
            "return": {
                "description": "in the form of [node1, node2, ...]",
                "type": "Array"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 470,
            "description": "Returns the partners in this partnership.",
            "itemtype": "method",
            "name": "getSideNeighbors",
            "return": {
                "description": "In the form of [node1, node2]",
                "type": "Array"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 480,
            "description": "Returns True if someNode can be a child of this partnership",
            "itemtype": "method",
            "name": "canBeParentOf",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 491,
            "description": "Creates a placeholder child for this partnership, if it has no children",
            "itemtype": "method",
            "name": "restorePlaceholders",
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 504,
            "description": "Returns a list of pregnancies with only a PlaceHolder child.",
            "itemtype": "method",
            "name": "getPlaceHolderPregnancies",
            "return": {
                "description": "Array of Pregnancy objects",
                "type": "Array"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 518,
            "description": "Returns an object (to be accepted by the menu) with information about this Partnership",
            "itemtype": "method",
            "name": "getSummary",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 533,
            "description": "Returns object with serialization data for this Partnership",
            "itemtype": "method",
            "name": "getInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 549,
            "description": "Applies properties found in info to this Partnership",
            "itemtype": "method",
            "name": "loadInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "info",
                    "description": "Serialization data"
                }
            ],
            "return": {
                "description": "Returns true if data in info was successfully applied to this node",
                "type": "Boolean"
            },
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 570,
            "description": "Changes the status of this partnership. Nullifies the status if the given status is not\n\"childless\" or \"infertile\". Adds an action stack entry for this action.",
            "itemtype": "method",
            "name": "setChildlessStatus",
            "params": [
                {
                    "name": "status",
                    "description": "Can be \"childless\", \"infertile\" or null",
                    "type": "String"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnership.js",
            "line": 608,
            "description": "Changes the reason for this Partnership's childlessStatus. Adds an entry in the action stack for this action.",
            "itemtype": "method",
            "name": "setChildlessReasonAction",
            "params": [
                {
                    "name": "reason",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Partnership"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 23,
            "description": "Creates the handles used in this hoverbox",
            "itemtype": "method",
            "name": "generateHandles",
            "return": {
                "description": "A set of handles",
                "type": "Raphael.st"
            },
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 34,
            "description": "Creates the buttons used in this hoverbox",
            "itemtype": "method",
            "name": "generateButtons",
            "return": {
                "description": "A set of buttons",
                "type": "Raphael.st"
            },
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 46,
            "description": "Hides the child handle",
            "itemtype": "method",
            "name": "hideChildHandle",
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 55,
            "description": "Unhides the child handle",
            "itemtype": "method",
            "name": "unhideChildHandle",
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 67,
            "description": "Returns true if the menu is toggled for this partnership node",
            "itemtype": "method",
            "name": "isMenuToggled",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 77,
            "description": "Shows/hides the menu for this partnership node",
            "itemtype": "method",
            "name": "toggleMenu",
            "params": [
                {
                    "name": "isMenuToggled",
                    "description": "Set to True to make the menu visible",
                    "type": "Boolean"
                }
            ],
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipHoverbox.js",
            "line": 98,
            "description": "Performs the appropriate action for clicking on the handle of type handleType",
            "itemtype": "method",
            "name": "handleAction",
            "params": [
                {
                    "name": "handleType",
                    "description": "Can be either \"child\", \"partner\" or \"parent\"",
                    "type": "String"
                },
                {
                    "name": "isDrag",
                    "description": "Set to True if the handle is being dragged at the time of the action",
                    "type": "Boolean"
                }
            ],
            "class": "PartnershipHoverbox"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 31,
            "description": "Expands the partnership circle",
            "itemtype": "method",
            "name": "grow",
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 43,
            "description": "Returns the Partnership for which the graphics are drawn",
            "itemtype": "method",
            "name": "getPartnership",
            "return": {
                "description": "",
                "type": "Partnership"
            },
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 53,
            "description": "Returns the circle that joins connections",
            "itemtype": "method",
            "name": "getJunctionShape",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 63,
            "description": "Returns an array containing the two partner connections",
            "itemtype": "method",
            "name": "getConnections",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 74,
            "description": "Updates the path of the connection for the given partner or creates a new\nconnection if it doesn't exist.",
            "itemtype": "method",
            "name": "updatePartnerConnection",
            "params": [
                {
                    "name": "partner",
                    "description": "A partner in this Partnership",
                    "type": "AbstractPerson"
                },
                {
                    "name": "partnerX",
                    "description": "X coordinate of the partner",
                    "type": "Number"
                },
                {
                    "name": "partnerY",
                    "description": "Y coordinate of the partner",
                    "type": "Number"
                },
                {
                    "name": "junctionX",
                    "description": "X coordinate of the junction",
                    "type": "Number"
                },
                {
                    "name": "junctionY",
                    "description": "Y coordinate of the junction",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to True to animate the transition to the new location",
                    "type": "Boolean"
                }
            ],
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 105,
            "description": "Updates the path of the connection for the given pregnancy or creates a new\nconnection if it doesn't exist.",
            "itemtype": "method",
            "name": "updatePregnancyConnection",
            "params": [
                {
                    "name": "preg",
                    "description": "Pregnancy associated with this partnership",
                    "type": "Pregnancy"
                },
                {
                    "name": "pregX",
                    "description": "X coordinate of the pregnancy",
                    "type": "Number"
                },
                {
                    "name": "pregY",
                    "description": "Y coordinate of the pregnancy",
                    "type": "Number"
                },
                {
                    "name": "partnershipX",
                    "description": "Y coordinate of the junction",
                    "type": "Number"
                },
                {
                    "name": "partnershipY",
                    "description": "Y coordinate of the junction",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true to animate the transition to the new location",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "The updated connection between the partnership and the pregnancy",
                "type": "Raphael.el"
            },
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 137,
            "description": "Changes the position of the junction to the coordinate (x,y) and updates all surrounding connections.",
            "itemtype": "method",
            "name": "setPos",
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate relative to the Raphael canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate relative to the Raphael canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to True to animate the transition",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "Executed at the end of the animation",
                    "type": "Function"
                }
            ],
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 171,
            "description": "Removes all the graphical elements of this partnership from the canvas",
            "itemtype": "method",
            "name": "remove",
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 185,
            "description": "Returns a Raphael set of graphic elements of which the icon of the Partnership consists. Does not\ninclude hoverbox elements and labels.",
            "itemtype": "method",
            "name": "getShapes",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/partnershipVisuals.js",
            "line": 196,
            "description": "Returns a Raphael set of all the graphics and labels associated with this Partnership. Includes the hoverbox\nelements and labels",
            "itemtype": "method",
            "name": "getAllGraphics",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PartnershipVisuals"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 55,
            "description": "Returns the graph node with the corresponding nodeID",
            "itemtype": "method",
            "name": "getNode",
            "params": [
                {
                    "name": "nodeID",
                    "description": "The id of the desired node",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the node whose id is nodeID",
                "type": "AbstractNode"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 65,
            "itemtype": "method",
            "name": "getGraph",
            "return": {
                "description": "(responsible for managing nodes in the editor)",
                "type": "Graph"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 73,
            "itemtype": "method",
            "name": "getActionStack",
            "return": {
                "description": "(responsible undoing and redoing actions)",
                "type": "ActionStack"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 81,
            "itemtype": "method",
            "name": "getNodetypeSelectionBubble",
            "return": {
                "description": "(floating window with initialization options for new nodes)",
                "type": "NodetypeSelectionBubble"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 89,
            "itemtype": "method",
            "name": "getNodeIndex",
            "return": {
                "description": "(indexes nodes and arranges the layout)",
                "type": "NodeIndex"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 97,
            "itemtype": "method",
            "name": "getWorkspace",
            "return": {
                "description": "",
                "type": "Workspace"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 105,
            "itemtype": "method",
            "name": "getLegend",
            "return": {
                "description": "Responsible for managing and displaying the disorder legend",
                "type": "Legend"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 113,
            "itemtype": "method",
            "name": "getPaper",
            "return": {
                "description": "Raphael paper element",
                "type": "Workspace.paper"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 121,
            "itemtype": "method",
            "name": "getSaveLoadEngine",
            "return": {
                "description": "Engine responsible for saving and loading operations",
                "type": "SaveLoadEngine"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 129,
            "itemtype": "method",
            "name": "getTemplateSelector",
            "return": {
                "description": "",
                "type": "TemplateSelector"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 137,
            "description": "Creates the context menu for Person nodes",
            "itemtype": "method",
            "name": "generateNodeMenu",
            "return": {
                "description": "",
                "type": "NodeMenu"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 248,
            "itemtype": "method",
            "name": "getNodeMenu",
            "return": {
                "description": "Context menu for nodes",
                "type": "NodeMenu"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 256,
            "description": "Creates the context menu for Partnership nodes",
            "itemtype": "method",
            "name": "generatePartnershipMenu",
            "return": {
                "description": "",
                "type": "NodeMenu"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 290,
            "itemtype": "method",
            "name": "getPartnershipMenu",
            "return": {
                "description": "The context menu for Partnership nodes",
                "type": "NodeMenu"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 298,
            "description": "Starts a timer to save the application state every 30 seconds",
            "itemtype": "method",
            "name": "initializeSave",
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/pedigree.js",
            "line": 307,
            "description": "Find the best position to insert one or more new neighbors for an existing node",
            "itemtype": "method",
            "name": "findPosition",
            "params": [
                {
                    "name": "relativePosition",
                    "description": "an object with one field, which can be either 'above', 'below', 'side', or 'join', whose value indicated the id of a node"
                },
                {
                    "name": "identifiers",
                    "description": "an array of new ids for which positions must be found"
                }
            ],
            "return": {
                "description": "an object where each field is one of the ids given as input, and the value is the point where that node should be placed"
            },
            "class": "PedigreeEditor"
        },
        {
            "file": "pedigree/person.js",
            "line": 36,
            "description": "Initializes the object responsible for creating graphics for this Person",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "PersonVisuals"
            },
            "access": "private",
            "tagname": "",
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 49,
            "description": "Returns True if this node is the proband (i.e. the main patient)",
            "itemtype": "method",
            "name": "isProband",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 59,
            "description": "Creates a new partnership between this Person and partner",
            "itemtype": "method",
            "name": "addPartner",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "partner",
                    "description": "",
                    "type": "AbstractPerson"
                },
                {
                    "name": "noChild",
                    "description": "Set to True if the partnership should not have a PlaceHolder child",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "Partnership"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 79,
            "description": "Creates a Partnership with a new Placeholder and adds a new Person child to this Partnership. Adds\nentry in the action stack for this action.",
            "itemtype": "method",
            "name": "createNodeAction",
            "params": [
                {
                    "name": "type",
                    "description": "The type for the new child. (eg. \"Person\", \"PlaceHolder\", \"PersonGroup\")",
                    "type": "String"
                },
                {
                    "name": "gender",
                    "description": "\"M\", \"F\" or \"U\".",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The created partner",
                "type": "AbstractPerson"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 132,
            "description": "Creates a new partnership with a new Person node. Creates an action stack entry\nfor the action.",
            "itemtype": "method",
            "name": "createPartnerAction",
            "return": {
                "description": "The newly created partner. Null in case partner could not be created.",
                "type": "Null|Person"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 176,
            "description": "Creates a new partnership with a new Person node and returns the partner. Creates an action stack entry\nfor the action.",
            "itemtype": "method",
            "name": "addPartnerAction",
            "return": {
                "description": "The added partner. Null in case the partnership could not be created",
                "type": "Null|Person"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 220,
            "description": "Makes child the child of this Person. Creates an action stack entry for the action.",
            "itemtype": "method",
            "name": "addChildAction",
            "return": {
                "description": "The added child. Null if the child could not be added",
                "type": "Null|Person"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 257,
            "description": "Creates a set of parents for this Person. Adds an action stack entry for the action",
            "itemtype": "method",
            "name": "createParentsAction",
            "return": {
                "description": "The partnership between the new parent nodes. Null if parents could not be added",
                "type": "Null|Partnership"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 295,
            "description": "Sets partnership as this Person's parent partnership",
            "itemtype": "method",
            "name": "addParents",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "partnership",
                    "description": "",
                    "type": "Partnership"
                }
            ],
            "return": {
                "description": "The added partnership or null if it couldn't be added",
                "type": "Null|Partnership"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 309,
            "description": "Sets partnership as this Person's parent partnership. Creates entry in action stack for the action.",
            "itemtype": "method",
            "name": "addParentsAction",
            "params": [
                {
                    "name": "partnership",
                    "description": "",
                    "type": "Partnership"
                }
            ],
            "return": {
                "description": "The added partnership or null if it couldn't be added",
                "type": "Null|Partnership"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 340,
            "description": "Sets parent as this Person's parent. Creates entry in action stack for the action.",
            "itemtype": "method",
            "name": "addParentAction",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "The parent partnership or null if parent couldn't be added",
                "type": "Null|Partnership"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 378,
            "description": "Adds a new partnership to the list of partnerships of this node",
            "itemtype": "method",
            "name": "addPartnership",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "partnership",
                    "description": "Partnership with this node as one of the partners",
                    "type": "Partnership"
                }
            ],
            "return": {
                "description": "The added Partnership or null if it couldn't be added",
                "type": "Null|Partnership"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 391,
            "description": "Removes partnership from the list of partnerships",
            "itemtype": "method",
            "name": "removePartnership",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "partnership",
                    "description": "Partnership with this node as one of the partners",
                    "type": "Partnership"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 403,
            "description": "Replaces the parent Pregnancy",
            "itemtype": "method",
            "name": "setParentPregnancy",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "pregnancy",
                    "description": "",
                    "type": "Pregnancy"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 420,
            "description": "Returns the first name of this Person",
            "itemtype": "method",
            "name": "getFirstName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 430,
            "description": "Replaces the first name of this Person with firstName, and displays the label",
            "itemtype": "method",
            "name": "setFirstName",
            "params": [
                {
                    "name": "firstName",
                    "description": ""
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 442,
            "description": "Replaces the first name of this Person with firstName, and displays the label. Creates an entry in action stack.",
            "itemtype": "method",
            "name": "setFirstNameAction",
            "params": [
                {
                    "name": "firstName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 467,
            "description": "Returns the last name of this Person",
            "itemtype": "method",
            "name": "getLastName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 477,
            "description": "Replaces the last name of this Person with lastName, and displays the label",
            "itemtype": "method",
            "name": "setLastName",
            "params": [
                {
                    "name": "lastName",
                    "description": ""
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 490,
            "description": "Replaces the last name of this Person with lastName, and displays the label. Creates an entry in action stack.",
            "itemtype": "method",
            "name": "setLastName",
            "params": [
                {
                    "name": "lastName",
                    "description": ""
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 516,
            "description": "Returns the status of this Person",
            "itemtype": "method",
            "name": "getLifeStatus",
            "return": {
                "description": "\"alive\", \"deceased\", \"stillborn\", \"unborn\" or \"aborted\"",
                "type": "String"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 526,
            "description": "Returns True if this node's status is not 'alive' or 'deceased'.",
            "itemtype": "method",
            "name": "isFetus",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 536,
            "description": "Returns True is status is 'unborn', 'stillborn', 'aborted', 'alive' or 'deceased'",
            "itemtype": "method",
            "name": "_isValidLifeStatus",
            "params": [
                {
                    "name": "status",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 550,
            "description": "Changes the life status of this Person to newStatus",
            "itemtype": "method",
            "name": "setLifeStatus",
            "params": [
                {
                    "name": "newStatus",
                    "description": "\"alive\", \"deceased\", \"stillborn\", \"unborn\" or \"aborted\"",
                    "type": "String"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 581,
            "description": "Changes the life status of this Person to newStatus and creates an entry in action stack.",
            "itemtype": "method",
            "name": "setLifeStatusAction",
            "params": [
                {
                    "name": "newStatus",
                    "description": "\"alive\", \"deceased\", \"stillborn\", \"unborn\" or \"aborted\"",
                    "type": "String"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 603,
            "description": "Returns the date of the conception date of this Person",
            "itemtype": "method",
            "name": "getConceptionDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 613,
            "description": "Replaces the conception date with newDate",
            "itemtype": "method",
            "name": "setConceptionDate",
            "params": [
                {
                    "name": "newDate",
                    "description": "Date of conception",
                    "type": "Date"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 624,
            "description": "Returns the number of weeks since conception",
            "itemtype": "method",
            "name": "getGestationAge",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 644,
            "description": "Updates the conception age of the Person given the number of weeks passed since conception",
            "itemtype": "method",
            "name": "setGestationAge",
            "params": [
                {
                    "name": "numWeeks",
                    "description": "Greater than or equal to 0",
                    "type": "Number"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 663,
            "description": "Updates the conception age of the Person given the number of weeks passed since conception.\nCreates entry in action stack",
            "itemtype": "method",
            "name": "setGestationAgeAction",
            "params": [
                {
                    "name": "numWeeks",
                    "description": "Greater than or equal to 0",
                    "type": "Number"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 686,
            "description": "Returns the the birth date of this Person",
            "itemtype": "method",
            "name": "getBirthDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 696,
            "description": "Replaces the birth date with newDate",
            "itemtype": "method",
            "name": "setBirthDate",
            "params": [
                {
                    "name": "newDate",
                    "description": "Must be earlier date than deathDate and a later than conception date",
                    "type": "Date"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 710,
            "description": "Replaces the birth date with newDate\nCreates entry in action stack",
            "itemtype": "method",
            "name": "setBirthDate",
            "params": [
                {
                    "name": "newDate",
                    "description": "Must be earlier date than deathDate and a later than conception date",
                    "type": "Date"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 733,
            "description": "Returns the death date of this Person",
            "itemtype": "method",
            "name": "getDeathDate",
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 743,
            "description": "Replaces the death date with deathDate",
            "itemtype": "method",
            "name": "setDeathDate",
            "params": [
                {
                    "name": "deathDate",
                    "description": "Must be a later date than birthDate",
                    "type": "Date"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 760,
            "description": "Replaces the death date with newDate\nCreates entry in action stack",
            "itemtype": "method",
            "name": "setDeathDate",
            "params": [
                {
                    "name": "newDate",
                    "description": "Must be a later date than birthDate",
                    "type": "Date"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 783,
            "description": "Returns a list of disorders of this person.",
            "itemtype": "method",
            "name": "getDisorders",
            "return": {
                "description": "List of Disorder objects.",
                "type": "Array"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 793,
            "description": "Adds disorder to the list of this node's disorders and updates the Legend.",
            "itemtype": "method",
            "name": "addDisorder",
            "params": [
                {
                    "name": "disorder",
                    "description": "Disorder object",
                    "type": "Disorder"
                },
                {
                    "name": "forceDisplay",
                    "description": "True if you want to display the change on the canvas",
                    "optional": true
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 808,
            "description": "Adds disorder to the list of this node's disorders and updates the Legend.\nCreates entry in action stack.",
            "itemtype": "method",
            "name": "addDisorderAction",
            "params": [
                {
                    "name": "disorder",
                    "description": "",
                    "type": "Disorder"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 832,
            "description": "Removes disorder to the list of this node's disorders and updates the Legend.",
            "itemtype": "method",
            "name": "removeDisorder",
            "params": [
                {
                    "name": "disorder",
                    "description": "",
                    "type": "Disorder"
                },
                {
                    "name": "forceDisplay",
                    "description": "True if you want to display the change on the canvas"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 851,
            "description": "Given a list of disorders, adds and removes the disorders of this node to match\nthe new list",
            "itemtype": "method",
            "name": "setDisorders",
            "params": [
                {
                    "name": "disorders",
                    "description": "List of Disorder objects",
                    "type": "Array"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 875,
            "description": "Given a list of disorders, adds and removes the disorders of this node to match\nthe new list. Adds entry in action stack.",
            "itemtype": "method",
            "name": "setDisorders",
            "params": [
                {
                    "name": "disorders",
                    "description": "List of Disorder objects",
                    "type": "Array"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 896,
            "description": "Returns disorder with given id if this person has it. Returns null otherwise.",
            "itemtype": "method",
            "name": "getDisorderByID",
            "params": [
                {
                    "name": "id",
                    "description": "Disorder ID, taken from the OMIM database",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Disorder"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 912,
            "description": "Returns True if this Person can be a parent of otherNode",
            "itemtype": "method",
            "name": "canBeParentOf",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "otherNode",
                    "description": "",
                    "type": "Person"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 929,
            "description": "Replaces this Person with a placeholder without breaking any the connections.",
            "itemtype": "method",
            "name": "convertToPlaceholder",
            "return": {
                "description": "",
                "type": "PlaceHolder"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 956,
            "description": "Changes the childless status of this Person. Nullifies the status if the given status is not\n\"childless\" or \"infertile\". Modifies the status of the partnerships as well.",
            "itemtype": "method",
            "name": "setChildlessStatus",
            "params": [
                {
                    "name": "status",
                    "description": "Can be \"childless\", \"infertile\" or null",
                    "type": "String"
                },
                {
                    "name": "ignoreOthers",
                    "description": "If True, changing the status will not modify partnerships's statuses or\ndetach any children",
                    "type": "Boolean"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 982,
            "description": "Changes the childless status of this Person. Nullifies the status if the given status is not\n\"childless\" or \"infertile\". Modifies the status of the partnerships as well.\nCreates a an entry in action stack.",
            "itemtype": "method",
            "name": "setChildlessStatusAction",
            "params": [
                {
                    "name": "status",
                    "description": "Can be \"childless\", \"infertile\" or null",
                    "type": "String"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 1017,
            "description": "Deletes this node, it's placeholder partners and children and optionally\nremoves all the other nodes that are unrelated to the proband node.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "isRecursive",
                    "description": "set to true if you want to remove related nodes that are\nnot connected to the proband",
                    "type": "Boolean"
                },
                {
                    "name": "skipConfirmation",
                    "description": "If True, will not display confirmation alert box",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "in the form\n\n    {\n       confirmed: true/false,\n       affected: {\n           PersonNodes : [Person1, Person2, ...],\n           PartnershipNodes : [Partnership1, Partnership2, ...],\n           PregnancyNodes : [Pregnancy1, Pregnancy2, ...],\n           PersonGroupNodes : [PersonGroup1, PersonGroup2, ...],\n           PlaceHolderNodes : [PlaceHolder1, PlaceHolder2, ...]\n       },\n       created: [PlaceHolder1, PlaceHolder2, ...]\n    }",
                "type": "Object"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 1072,
            "description": "Adds a placeholder child to all partnerships that are missing it.",
            "itemtype": "method",
            "name": "restorePlaceholders",
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 1088,
            "description": "Returns an object (to be accepted by the menu) with information about this Person",
            "itemtype": "method",
            "name": "getSummary",
            "return": {
                "description": "Summary object for the menu",
                "type": "Object"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 1116,
            "description": "Returns object with serialization data",
            "itemtype": "method",
            "name": "getInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Person"
        },
        {
            "file": "pedigree/person.js",
            "line": 1141,
            "description": "Applies properties found in info to this Person",
            "itemtype": "method",
            "name": "loadInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "info",
                    "description": "Serialization data object"
                }
            ],
            "class": "Person"
        },
        {
            "file": "pedigree/personGroup.js",
            "line": 23,
            "description": "Initializes the object responsible for creating graphics for this PersonGroup",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate of hte PersonGroup Node",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate of hte PersonGroup Node",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "PersonGroupVisuals"
            },
            "class": "PersonGroup"
        },
        {
            "file": "pedigree/personGroup.js",
            "line": 35,
            "description": "Deletes this node, it's placeholder partners and children and optionally\nremoves all the other nodes that are unrelated to the proband node.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "isRecursive",
                    "description": "Set to true if you want to remove related nodes that are\nnot connected to the proband",
                    "type": "Boolean"
                },
                {
                    "name": "skipConfirmation",
                    "description": "If true, will not display a confirmation pop-up",
                    "type": "Boolean"
                }
            ],
            "class": "PersonGroup"
        },
        {
            "file": "pedigree/personGroup.js",
            "line": 55,
            "description": "Changes the number of people who are in this PersonGroup",
            "itemtype": "method",
            "name": "setNumPersons",
            "params": [
                {
                    "name": "numPersons",
                    "description": "The number of people in this grouping",
                    "type": "Number"
                }
            ],
            "class": "PersonGroup"
        },
        {
            "file": "pedigree/personGroup.js",
            "line": 66,
            "description": "Returns the number of people who are in this PersonGroup",
            "itemtype": "method",
            "name": "getNumPersons",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "PersonGroup"
        },
        {
            "file": "pedigree/personGroup.js",
            "line": 76,
            "description": "Returns an object containing all the information about this node.",
            "itemtype": "method",
            "name": "getInfo",
            "return": {
                "description": "in the form\n\n    {\n    type: // (type of the node),\n    x:  // (x coordinate)\n    y:  // (y coordinate)\n    id: // id of the node\n    gender: //gender of the node\n    numPersons: //number of people in this grouping\n    }",
                "type": "Object"
            },
            "class": "PersonGroup"
        },
        {
            "file": "pedigree/personGroup.js",
            "line": 97,
            "description": "Applies the properties found in info to this node.",
            "itemtype": "method",
            "name": "loadInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "info",
                    "description": "Object in the form\n\n",
                    "type": "!~YUIDOC_LINE~!    type: // (type of the node),!~YUIDOC_LINE~!    x:  // (x coordinate)!~YUIDOC_LINE~!    y:  // (y coordinate)!~YUIDOC_LINE~!    id: // id of the node!~YUIDOC_LINE~!    gender: //gender of the node!~YUIDOC_LINE~!    numPersons: //number of people in this grouping!~YUIDOC_LINE~!"
                }
            ],
            "return": {
                "description": "true if info was successfully loaded",
                "type": "Boolean"
            },
            "class": "PersonGroup"
        },
        {
            "file": "pedigree/personGroupVisuals.js",
            "line": 22,
            "description": "Returns all the graphics associated with this PersonGroup",
            "itemtype": "method",
            "name": "getAllGraphics",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "Raphael set containing graphics elements",
                "type": "Raphael.st"
            },
            "class": "PersonGroupVisuals"
        },
        {
            "file": "pedigree/personGroupVisuals.js",
            "line": 33,
            "description": "Changes the label for the number of people in this group",
            "itemtype": "method",
            "name": "setNumPersons",
            "params": [
                {
                    "name": "numPersons",
                    "description": "The number of people in this group",
                    "type": "Number"
                }
            ],
            "class": "PersonGroupVisuals"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 24,
            "description": "Creates the handles used in this hoverbox",
            "itemtype": "method",
            "name": "generateHandles",
            "return": {
                "description": "A set of handles",
                "type": "Raphael.st"
            },
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 38,
            "description": "Creates the buttons used in this hoverbox",
            "itemtype": "method",
            "name": "generateButtons",
            "return": {
                "description": "A set of buttons",
                "type": "Raphael.st"
            },
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 50,
            "description": "Hides the partner and children handles",
            "itemtype": "method",
            "name": "hidePartnerHandles",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 60,
            "description": "Displays the partner and children handles",
            "itemtype": "method",
            "name": "unhidePartnerHandles",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 74,
            "description": "Hides the child handle",
            "itemtype": "method",
            "name": "hideChildHandle",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 83,
            "description": "Displays the child handle",
            "itemtype": "method",
            "name": "unhideChildHandle",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 95,
            "description": "Hides the parent handle",
            "itemtype": "method",
            "name": "hideParentHandle",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 104,
            "description": "Displays the parent handle",
            "itemtype": "method",
            "name": "unHideParentHandle",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 116,
            "description": "Returns true if the menu for this node is open",
            "itemtype": "method",
            "name": "isMenuToggled",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 126,
            "description": "Shows/hides the menu for this node",
            "itemtype": "method",
            "name": "toggleMenu",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 147,
            "description": "Hides the hoverbox with a fade out animation",
            "itemtype": "method",
            "name": "animateHideHoverZone",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 159,
            "description": "Displays the hoverbox with a fade in animation",
            "itemtype": "method",
            "name": "animateDrawHoverZone",
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personHoverbox.js",
            "line": 169,
            "description": "Performs the appropriate action for clicking on the handle of type handleType",
            "itemtype": "method",
            "name": "handleAction",
            "params": [
                {
                    "name": "handleType",
                    "description": "\"child\", \"partner\" or \"parent\"",
                    "type": "String"
                },
                {
                    "name": "isDrag",
                    "description": "True if this handle is being dragged",
                    "type": "Boolean"
                }
            ],
            "class": "PersonHoverbox"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 29,
            "description": "Draws the icon for this Person depending on the gender, life status and whether this Person is the proband.\nUpdates the disorder shapes.",
            "itemtype": "method",
            "name": "setGenderSymbol",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 79,
            "description": "Returns all graphical elements that are behind the gender symbol",
            "itemtype": "method",
            "name": "getBackElements",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 89,
            "description": "Updates the name label for this Person",
            "itemtype": "method",
            "name": "updateNameLabel",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 110,
            "description": "Returns the Person's name label",
            "itemtype": "method",
            "name": "getNameLabel",
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 120,
            "description": "Returns colored blocks representing disorders",
            "itemtype": "method",
            "name": "getDisorderShapes",
            "return": {
                "description": "Set of disorder shapes",
                "type": "Raphael.st"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 130,
            "description": "Displays the disorders currently registered for this node.",
            "itemtype": "method",
            "name": "updateDisorderShapes",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 190,
            "description": "Draws a line across the Person to display that he is dead (or aborted).",
            "itemtype": "method",
            "name": "drawDeadShape",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 218,
            "description": "Returns the line drawn across a dead Person's icon",
            "itemtype": "method",
            "name": "getDeadShape",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 228,
            "description": "Returns this Person's age label",
            "itemtype": "method",
            "name": "getAgeLabel",
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 238,
            "description": "Updates the age label for this Person",
            "itemtype": "method",
            "name": "updateAgeLabel",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 273,
            "description": "Returns the shape marking a Person's 'unborn' life-status",
            "itemtype": "method",
            "name": "getUnbornShape",
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 283,
            "description": "Draws a \"P\" on top of the node to display this Person's 'unborn' life-status",
            "itemtype": "method",
            "name": "drawUnbornShape",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 296,
            "description": "Returns this Person's stillbirth label",
            "itemtype": "method",
            "name": "getSBLabel",
            "return": {
                "description": "",
                "type": "Raphael.el"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 306,
            "description": "Updates the stillbirth label for this Person",
            "itemtype": "method",
            "name": "updateSBLabel",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 319,
            "description": "Displays the correct graphics to represent the current life status for this Person.",
            "itemtype": "method",
            "name": "updateLifeStatusShapes",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 352,
            "description": "Marks this node as hovered, and moves the labels out of the way",
            "itemtype": "method",
            "name": "setSelected",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 367,
            "description": "Moves the labels down to make space for the hoverbox",
            "itemtype": "method",
            "name": "shiftLabels",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 381,
            "description": "Animates the labels of this node to their original position under the node",
            "itemtype": "method",
            "name": "unshiftLabels",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 395,
            "description": "Returns set of labels for this Person",
            "itemtype": "method",
            "name": "getLabels",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 409,
            "description": "Displays all the appropriate labels for this Person in the correct layering order",
            "itemtype": "method",
            "name": "drawLabels",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 428,
            "description": "Returns set with the gender icon, disorder shapes and life status shapes.",
            "itemtype": "method",
            "name": "getShapes",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 443,
            "description": "Returns all the graphics and labels associated with this Person.",
            "itemtype": "method",
            "name": "getAllGraphics",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 453,
            "description": "Changes the position of the node to (x,y)",
            "itemtype": "method",
            "name": "setPos",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "x",
                    "description": "the x coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "set to true if you want to animate the transition",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "a function that will be called at the end of the animation",
                    "type": "Function"
                }
            ],
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/personVisuals.js",
            "line": 476,
            "description": "[Helper for setPos] Saves the x and y values as current coordinates and updates connections with the new position",
            "itemtype": "method",
            "name": "_updatePositionData",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "x",
                    "description": "The new x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The new y coordinate",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PersonVisuals"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 23,
            "description": "Initializes the object responsible for creating graphics for this PlaceHolder",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y coordinate on the Raphael canvas at which the node drawing will be centered",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "PlaceHolderVisuals"
            },
            "access": "private",
            "tagname": "",
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 36,
            "description": "Replaces this PlaceHolder with new node of given type and gender.\nCreates an action stack entry",
            "itemtype": "method",
            "name": "createNodeAction",
            "params": [
                {
                    "name": "type",
                    "description": "\"Person\" or \"PersonGroup\"",
                    "type": "String"
                },
                {
                    "name": "gender",
                    "description": "\"M\", \"F\", or \"U\"",
                    "type": "String"
                }
            ],
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 68,
            "description": "Replaces this PlaceHolder with new node of given type and gender.\nCreates an action stack entry",
            "itemtype": "method",
            "name": "createNodeAction",
            "params": [
                {
                    "name": "type",
                    "description": "\"Person\" or \"PersonGroup\"",
                    "type": "String"
                },
                {
                    "name": "gender",
                    "description": "\"M\", \"F\", or \"U\"",
                    "type": "String"
                }
            ],
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 83,
            "description": "Attributes all of the connections of this placeholder to person and removes the placeholder.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "person",
                    "description": "",
                    "type": "Person"
                }
            ],
            "return": {
                "description": "The person with which the node was merged or null if merge was unsuccessful",
                "type": "Person"
            },
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 124,
            "description": "Returns true if this placeholder is not a partner, descendant or ancestor of person, and if person has\nno parent conflict with the placeholder",
            "itemtype": "method",
            "name": "canMergeWith",
            "params": [
                {
                    "name": "person",
                    "description": "",
                    "type": "Person"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 140,
            "description": "Returns true if person has a different set of parents than this placeholder",
            "itemtype": "method",
            "name": "hasConflictingParents",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolder.js",
            "line": 152,
            "description": "Attributes all of the connections of this placeholder to person and removes the placeholder.\nCreates entry in the action stack.",
            "itemtype": "method",
            "name": "merge",
            "params": [
                {
                    "name": "person",
                    "description": "",
                    "type": "Person"
                },
                {
                    "name": "originalX",
                    "description": "The original x coordinate of the PlaceHolder",
                    "type": "Number"
                },
                {
                    "name": "originalY",
                    "description": "The original y coordinate of the PlaceHolder",
                    "type": "Number"
                }
            ],
            "class": "PlaceHolder"
        },
        {
            "file": "pedigree/placeHolderVisuals.js",
            "line": 19,
            "description": "Sets/replaces the gender symbol with the symbol appropriate for the gender. Returns raphael set containing\nthe genderShape, a shadow behind it, and the text \"drag me or click me\".",
            "itemtype": "method",
            "name": "setGenderSymbol",
            "class": "PlaceHolderVisuals"
        },
        {
            "file": "pedigree/placeHolderVisuals.js",
            "line": 40,
            "description": "Handles the dragging and clicking behavior of the placeholder",
            "itemtype": "method",
            "name": "setDraggable",
            "class": "PlaceHolderVisuals"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 28,
            "description": "Generates and returns an instance of PregnancyVisuals",
            "itemtype": "method",
            "name": "_generateGraphics",
            "params": [
                {
                    "name": "x",
                    "description": "X coordinate on the canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "X coordinate on the canvas",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "PregnancyVisuals"
            },
            "access": "private",
            "tagname": "",
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 41,
            "description": "Returns the gender of the twins in this pregnancy",
            "itemtype": "method",
            "name": "getGender",
            "return": {
                "description": "\"M\", \"F\", or \"U\"",
                "type": "String"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 51,
            "description": "Changes the gender of this pregnancy",
            "itemtype": "method",
            "name": "setGender",
            "params": [
                {
                    "name": "gender",
                    "description": "\"M\", \"F\", or \"U\"",
                    "type": "String"
                }
            ],
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 68,
            "description": "Returns true if editing the gender of this pregnancy is currently impossible",
            "itemtype": "method",
            "name": "isGenderLocked",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 85,
            "description": "Returns the partnership that has this pregnancy",
            "itemtype": "method",
            "name": "getPartnership",
            "return": {
                "description": "",
                "type": "Partnership"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 95,
            "description": "Returns an array of nodes that are children of this Pregnancy",
            "itemtype": "method",
            "name": "getChildren",
            "params": [
                {
                    "name": "type",
                    "description": "Filters for types of children to include (such as \"Person\", \"PlaceHolder, etc)",
                    "type": "String",
                    "optional": true,
                    "multiple": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 117,
            "description": "Returns true if someNode is a child of this pregnancy.",
            "itemtype": "method",
            "name": "hasChild",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 128,
            "description": "Creates a new node and sets it as a child of this pregnancy",
            "itemtype": "method",
            "name": "createChild",
            "params": [
                {
                    "name": "type",
                    "description": "Any type of AbstractPerson",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The created child or null if creation failed",
                "type": "AbstractPerson"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 147,
            "description": "Creates a new node and sets it as a child of this pregnancy.\nCreates action stack entry.",
            "itemtype": "method",
            "name": "createChildAction",
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 168,
            "description": "Adds someNode as this pregnancy's child",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "someNode",
                    "description": "is an AbstractPerson"
                }
            ],
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 184,
            "description": "Breaks the connection between the pregnancy and child.\nReturns child;",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "Child of this pregnancy",
                    "type": "AbstractPerson"
                }
            ],
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 207,
            "description": "Breaks connections with all related nodes and removes this node from\nthe record.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "isRecursive",
                    "description": "set to true to remove all nodes that will result in being unrelated to the proband",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                },
                {
                    "name": "skipConfirmation",
                    "description": "if true, no confirmation box will pop up",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "in the form\n\n    {\n    confirmed: true/false,\n    affected: {\n    PersonNodes : [Person1, Person2, ...],\n    PartnershipNodes : [Partnership1, Partnership2, ...],\n    PregnancyNodes : [Pregnancy1, Pregnancy2, ...],\n    PersonGroupNodes : [PersonGroup1, PersonGroup2, ...],\n    PlaceHolderNodes : [PlaceHolder1, PlaceHolder2, ...]\n    },\n    created: [PlaceHolder1, PlaceHolder2, ...]\n    }",
                "type": "Object"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 248,
            "description": "Returns lower neighbors of this node in the tree graph",
            "itemtype": "method",
            "name": "getLowerNeighbors",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 258,
            "description": "Returns side neighbors of this node in the tree graph",
            "itemtype": "method",
            "name": "getSideNeighbors",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 268,
            "description": "Returns upper neighbors of this node in the tree graph",
            "itemtype": "method",
            "name": "getUpperNeighbors",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 278,
            "description": "Returns true if someNode can be a child of this pregnancy",
            "itemtype": "method",
            "name": "canBeParentOf",
            "params": [
                {
                    "name": "someNode",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 290,
            "description": "Returns true if a child of type 'nodeType' can be added to this pregnancy",
            "itemtype": "method",
            "name": "isChildTypeValid",
            "nodetype": "can be any type of AbstractNode, such as \"Person\", \"PlaceHolder\" and \"PersonGroup\"",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 305,
            "description": "Returns true if the only child of this pregnancy is a PlaceHolder",
            "itemtype": "method",
            "name": "isPlaceHolderPregnancy",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 316,
            "description": "Creates a new pregnancy for parent partnership and makes someNode a child of that pregnancy",
            "itemtype": "method",
            "name": "separateFromPregnancy",
            "params": [
                {
                    "name": "someNode",
                    "description": "Child of this pregnancy",
                    "type": "AbstractPerson"
                }
            ],
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 329,
            "description": "Returns True if this pregnancy has any children that are not adopted",
            "itemtype": "method",
            "name": "hasNonAdoptedChildren",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 344,
            "description": "Toggles the pregnancy bubble interactivity active or inactive",
            "itemtype": "method",
            "name": "setActive",
            "params": [
                {
                    "name": "isActive",
                    "description": "Set to True to make pregnancy interactive",
                    "type": "Boolean"
                }
            ],
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 357,
            "description": "Returns True if the user can currently interactively add new children to this pregnancy",
            "itemtype": "method",
            "name": "isActive",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 367,
            "description": "Checks whether the pregnancy junction should be active and updates the active status",
            "itemtype": "method",
            "name": "updateActive",
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 378,
            "description": "Returns object with serialization data",
            "itemtype": "method",
            "name": "getInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancy.js",
            "line": 396,
            "description": "Applies properties found in info to this Pregnancy",
            "itemtype": "method",
            "name": "loadInfo",
            "params": [
                {
                    "name": "$super",
                    "description": "",
                    "optional": true
                },
                {
                    "name": "info",
                    "description": ""
                }
            ],
            "class": "Pregnancy"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 28,
            "description": "Expands the pregnancy circle",
            "itemtype": "method",
            "name": "grow",
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 40,
            "description": "Shrinks the pregnancy circle",
            "itemtype": "method",
            "name": "shrink",
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 51,
            "description": "Enables or disables pregnancy interactivity based on the \"active\" status",
            "itemtype": "method",
            "name": "updateActive",
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 67,
            "description": "Actions that happen when the pregnancy bubble is clicked",
            "itemtype": "method",
            "name": "_onClick",
            "access": "private",
            "tagname": "",
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 79,
            "description": "Returns the Pregnancy for which the graphics are drawn",
            "itemtype": "method",
            "name": "",
            "return": {
                "description": "",
                "type": "Pregnancy"
            },
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 99,
            "description": "Updates the path of the connection for the given child or creates a new\nconnection if it doesn't exist.",
            "itemtype": "method",
            "name": "updateChildConnection",
            "params": [
                {
                    "name": "child",
                    "description": "Child of this pregnancy",
                    "type": "AbstractPerson"
                },
                {
                    "name": "childX",
                    "description": "X coordinate of the child",
                    "type": "Number"
                },
                {
                    "name": "childY",
                    "description": "Y coordinate of the child",
                    "type": "Number"
                },
                {
                    "name": "junctionX",
                    "description": "the X coordinate of the junction",
                    "type": "Number"
                },
                {
                    "name": "junctionY",
                    "description": "Y coordinate of the junction",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "Set to true to animate the transition to the new location",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Edge connecting child and pregnancy",
                "type": "Raphael.el"
            },
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 133,
            "description": "Changes the position of the pregnancy bubble to the coordinate (x,y) and updates all surrounding connections.",
            "itemtype": "method",
            "name": "setPos",
            "params": [
                {
                    "name": "x",
                    "description": "the x coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "the y coordinate",
                    "type": "Number"
                },
                {
                    "name": "animate",
                    "description": "set to true if you want to animate the transition",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "the function called at the end of the animation",
                    "type": "Function"
                }
            ],
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 165,
            "description": "Removes all the graphical elements of this partnership from the canvas",
            "itemtype": "method",
            "name": "remove",
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 175,
            "description": "Removes the edge connecting child to this pregnancy",
            "itemtype": "method",
            "name": "removeChild",
            "params": [
                {
                    "name": "child",
                    "description": "Child of this pregnancy",
                    "type": "AbstractPerson"
                }
            ],
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 188,
            "description": "Creates an edge connecting child to this pregnancy",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "",
                    "type": "AbstractPerson"
                }
            ],
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 200,
            "description": "Returns color and style attributes for a connection based on the type of the connection and type of the node.\nPlaceHolder connections have a dash-array stroke.",
            "itemtype": "method",
            "name": "getConnectionAttributes",
            "params": [
                {
                    "name": "node",
                    "description": "the node for which the connection is being drawn",
                    "type": "AbstractPerson"
                }
            ],
            "return": {
                "description": "Object with raphael attributes"
            },
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 214,
            "description": "Returns a Raphael set of graphic elements of which the icon of the Pregnancy consists. Does not\ninclude labels.",
            "itemtype": "method",
            "name": "getShapes",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/pregnancyVisuals.js",
            "line": 225,
            "description": "Returns a Raphael set of all the graphics and labels associated with this Pregnancy. Includes labels.",
            "itemtype": "method",
            "name": "getAllGraphics",
            "return": {
                "description": "",
                "type": "Raphael.st"
            },
            "class": "PregnancyVisuals"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 1,
            "description": "Raphaël-ZPD: A zoom/pan/drag plugin for Raphaël.\n ==================================================\n\n This code is licensed under the following BSD license:\n \n Copyright 2010 Gabriel Zabusek <gabriel.zabusek@gmail.com> (Interface and feature extensions and modifications). All rights reserved.\n Copyright 2010 Daniel Assange <somnidea@lemma.org> (Raphaël integration and extensions). All rights reserved.\n Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com> (original author). All rights reserved.\n \n Redistribution and use in source and binary forms, with or without modification, are\n permitted provided that the following conditions are met:\n \n  1. Redistributions of source code must retain the above copyright notice, this list of\n     conditions and the following disclaimer.\n \n  2. Redistributions in binary form must reproduce the above copyright notice, this list\n     of conditions and the following disclaimer in the documentation and/or other materials\n     provided with the distribution.\n \n THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED\n WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR\n CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n \n The views and conclusions contained in the software and documentation are those of the\n authors and should not be interpreted as representing official policies, either expressed\n or implied, of Andrea Leofreddi.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 128,
            "description": "Handler registration",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 145,
            "description": "Instance an SVGPoint object with given event coordinates.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 157,
            "description": "Sets the current transform matrix of an element.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 166,
            "description": "Dumps a matrix to a string (useful for debug).",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 175,
            "description": "Sets attributes of an element.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 183,
            "description": "Handle mouse move event.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 231,
            "description": "Handle mouse move event.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 265,
            "description": "Handle click event.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/raphaelzpd.js",
            "line": 302,
            "description": "Handle mouse button release event.",
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/saveLoadEngine.js",
            "line": 34,
            "description": "Saves the state of the graph",
            "return": {
                "description": "Serialization data for the entire graph"
            },
            "class": "SaveLoadEngine"
        },
        {
            "file": "pedigree/saveLoadIndicator.js",
            "line": 27,
            "description": "Displays the the loading window",
            "itemtype": "method",
            "name": "show",
            "class": "SaveLoadIndicator"
        },
        {
            "file": "pedigree/saveLoadIndicator.js",
            "line": 36,
            "description": "Hides the the loading window",
            "itemtype": "method",
            "name": "hide",
            "class": "SaveLoadIndicator"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 56,
            "description": "Returns the Raphael paper object.",
            "itemtype": "method",
            "name": "getPaper",
            "return": {
                "description": "Raphael Paper element",
                "type": "Object"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 66,
            "description": "Returns the div element containing everything except the top menu bar",
            "itemtype": "method",
            "name": "getWorkArea",
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 76,
            "description": "Returns width of the work area",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 86,
            "description": "Returns height of the work area",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 96,
            "description": "Adjusts the canvas viewbox to the given zoom coefficient",
            "itemtype": "method",
            "name": "zoom",
            "params": [
                {
                    "name": "zoomCoefficient",
                    "description": "The zooming ratio",
                    "type": "Number"
                }
            ],
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 113,
            "description": "Creates the menu on the top",
            "itemtype": "method",
            "name": "generateTopMenu",
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 158,
            "description": "Creates the controls for panning and zooming",
            "itemtype": "method",
            "name": "generateViewControls",
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 238,
            "description": "Converts the coordinates relative to the Raphael canvas to coordinates relative to the canvas div\nand returns them",
            "itemtype": "method",
            "name": "canvasToDiv",
            "params": [
                {
                    "name": "canvasX",
                    "description": "The x coordinate relative to the Raphael canvas (ie with pan/zoom transformations)",
                    "type": "Number"
                },
                {
                    "name": "canvasY",
                    "description": "The y coordinate relative to the Raphael canvas (ie with pan/zoom transformations)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Object with coordinates",
                "type": "X: number, y: number"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 254,
            "description": "Converts the coordinates relative to the canvas div to coordinates relative to the Raphael canvas\nby applying zoom/pan transformations and returns them.",
            "itemtype": "method",
            "name": "divToCanvas",
            "params": [
                {
                    "name": "divX",
                    "description": "The x coordinate relative to the canvas",
                    "type": "Number"
                },
                {
                    "name": "divY",
                    "description": "The y coordinate relative to the canvas",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Object with coordinates",
                "type": "X: number, y: number"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 270,
            "description": "Converts the coordinates relative to the browser viewport to coordinates relative to the canvas div,\nand returns them.",
            "itemtype": "method",
            "name": "viewportToDiv",
            "params": [
                {
                    "name": "absX",
                    "description": "The x coordinate relative to the viewport",
                    "type": "Number"
                },
                {
                    "name": "absY",
                    "description": "The y coordinate relative to the viewport",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "} Object with coordinates",
                "type": "X: number, y: number"
            },
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 286,
            "description": "Animates a transformation of the viewbox to the given coordinate",
            "itemtype": "method",
            "name": "panTo",
            "params": [
                {
                    "name": "x",
                    "description": "The x coordinate relative to the Raphael canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "The y coordinate relative to the Raphael canvas",
                    "type": "Number"
                }
            ],
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 317,
            "description": "Adjusts the canvas size to the current viewport dimensions.",
            "itemtype": "method",
            "name": "adjustSizeToScreen",
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 334,
            "description": "Pans the canvas to put the node with the given id at the center.",
            "itemtype": "method",
            "name": "adjustSizeToScreen",
            "params": [
                {
                    "name": "nodeID",
                    "description": "The id of the node",
                    "type": "Number"
                }
            ],
            "class": "Workspace"
        },
        {
            "file": "pedigree/workspace.js",
            "line": 351,
            "description": "Centers the canvas around the proband and resets the zoom to the original value.",
            "itemtype": "method",
            "name": "resetZoomPan",
            "class": "Workspace"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pedigree/legend.js:46"
        },
        {
            "message": "unknown tag: id",
            "line": " pedigree/partnership.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pedigree/person.js:536"
        },
        {
            "message": "unknown tag: nodetype",
            "line": " pedigree/pregnancy.js:290"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " pedigree/pregnancy.js:329"
        },
        {
            "message": "Missing item type\nReturns the age of a person with the given birth and death dates",
            "line": " pedigree/ageCalc.js:1"
        },
        {
            "message": "Missing item type\nReturns a raphael element representing a Pi-Chart-like slice of the icon representing the given gender",
            "line": " pedigree/graphicHelpers.js:1"
        },
        {
            "message": "Missing item type\nJoins all the subsets into one set and returns it.",
            "line": " pedigree/graphicHelpers.js:131"
        },
        {
            "message": "Missing item type\nReturns set containing the given element",
            "line": " pedigree/graphicHelpers.js:143"
        },
        {
            "message": "Missing item type\nReturns a set containing the elements of this set and the given set. Doesn't modify the original sets.",
            "line": " pedigree/graphicHelpers.js:151"
        },
        {
            "message": "Missing item type\nReturns True if this set contains target. Target has to be directly in this set, and not in a subset.",
            "line": " pedigree/graphicHelpers.js:169"
        },
        {
            "message": "Missing item type\nReturns a new set containing the same elements as this set",
            "line": " pedigree/graphicHelpers.js:185"
        },
        {
            "message": "Missing item type\nPosition tree. This stuff is black magic - be careful how you use it",
            "line": " pedigree/kdTree.js:1"
        },
        {
            "message": "Missing item type\nClass responsible for the graph layout.",
            "line": " pedigree/layout.js:1"
        },
        {
            "message": "Missing item type\nGenerate the perfect layout for this graph",
            "line": " pedigree/layout.js:10"
        },
        {
            "message": "Missing item type\nBuild the skeleton for the layout - the specification for the hierarchy of nodes",
            "line": " pedigree/layout.js:20"
        },
        {
            "message": "Missing item type\nRepositions the nodes in a hierarchical layout",
            "line": " pedigree/layout.js:52"
        },
        {
            "message": "Missing item type\nModifies the layout to fix overlapping edges in the graph",
            "line": " pedigree/layout.js:60"
        },
        {
            "message": "Missing item type\nRemoves an occurrence of a disorder if there are any. Removes the disorder\nfrom the 'Legend' box if this disorder is not registered in any individual.",
            "line": " pedigree/legend.js:111"
        },
        {
            "message": "Missing item type",
            "line": " pedigree/nodeIndex.js:42"
        },
        {
            "message": "Missing item type\nInitialize the node index",
            "line": " pedigree/nodeIndex.js:47"
        },
        {
            "message": "Missing item type\n[Internal method] return the closest position in the grid for a 2D point",
            "line": " pedigree/nodeIndex.js:90"
        },
        {
            "message": "Missing item type\nFind the best position to insert one or more new neighbors for an existing node",
            "line": " pedigree/nodeIndex.js:100"
        },
        {
            "message": "Missing item type\nRegisters a new node in the index",
            "line": " pedigree/nodeIndex.js:180"
        },
        {
            "message": "Missing item type\n[Internal method] inserts a node in one of the dimension indexes, xIndex or yIndex.",
            "line": " pedigree/nodeIndex.js:210"
        },
        {
            "message": "Missing item type\n[Internal method] Retrieves all the nodes on a certain line or column of the grid",
            "line": " pedigree/nodeIndex.js:228"
        },
        {
            "message": "Missing item type\nUpdate the index after having performed node moves",
            "line": " pedigree/nodeIndex.js:239"
        },
        {
            "message": "Missing item type\n[Internal method] Updates the index after adding a new node as another node's child.",
            "line": " pedigree/nodeIndex.js:280"
        },
        {
            "message": "Missing item type\n[Internal method] Updates the index after adding a new node as another node's partner.",
            "line": " pedigree/nodeIndex.js:304"
        },
        {
            "message": "Missing item type\n[Internal method] Updates the index after adding a nodes as another node's parents.",
            "line": " pedigree/nodeIndex.js:340"
        },
        {
            "message": "Missing item type\n[Internal method] Updates the positions of all the nodes in a row when a node in that row was added or removed.",
            "line": " pedigree/nodeIndex.js:398"
        },
        {
            "message": "Missing item type\n[Internal method] Updates the positions of all the nodes related to a recently moved node",
            "line": " pedigree/nodeIndex.js:421"
        },
        {
            "message": "Missing item type\n[Internal method] Updates the vertical ordering of nodes whenever a higher node is becomes the child of a lower one.",
            "line": " pedigree/nodeIndex.js:478"
        },
        {
            "message": "Missing item type\nRemove a node from the index",
            "line": " pedigree/nodeIndex.js:490"
        },
        {
            "message": "Missing item type\nMove a node to a diferent position",
            "line": " pedigree/nodeIndex.js:508"
        },
        {
            "message": "Missing item type\nMove a node to a different position, indicated by relative coordinates",
            "line": " pedigree/nodeIndex.js:526"
        },
        {
            "message": "Missing item type\n[Internal method] Retrieves the indexed node matching the input",
            "line": " pedigree/nodeIndex.js:537"
        },
        {
            "message": "Missing item type\nRetrieves the node indexed for a given id",
            "line": " pedigree/nodeIndex.js:552"
        },
        {
            "message": "Missing item type\nRetrieves the node indexed for a given position",
            "line": " pedigree/nodeIndex.js:561"
        },
        {
            "message": "Missing item type\nRetrieves the node in the grid point closest to the input coordinates",
            "line": " pedigree/nodeIndex.js:571"
        },
        {
            "message": "Missing item type\nChecks if an id is registered in the index",
            "line": " pedigree/nodeIndex.js:582"
        },
        {
            "message": "Missing item type\n[Internal method] Find the leftmost and rightmost x coordinate of nodes horizontally connected to a given node",
            "line": " pedigree/nodeIndex.js:589"
        },
        {
            "message": "Missing item type\n[Internal method] Find the distance between leftmost and rightmost x coordinate of nodes horizontally connected to a given node",
            "line": " pedigree/nodeIndex.js:619"
        },
        {
            "message": "Missing item type\n[Internal method] Find the leftmost and rightmost x coordinate of the lower neighbors of a node",
            "line": " pedigree/nodeIndex.js:629"
        },
        {
            "message": "Missing item type\n[Internal method] Find the distance between leftmost and rightmost x coordinate of the lower neighbors of a node",
            "line": " pedigree/nodeIndex.js:645"
        },
        {
            "message": "Missing item type\nRaphaël-ZPD: A zoom/pan/drag plugin for Raphaël.\n ==================================================\n\n This code is licensed under the following BSD license:\n \n Copyright 2010 Gabriel Zabusek <gabriel.zabusek@gmail.com> (Interface and feature extensions and modifications). All rights reserved.\n Copyright 2010 Daniel Assange <somnidea@lemma.org> (Raphaël integration and extensions). All rights reserved.\n Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com> (original author). All rights reserved.\n \n Redistribution and use in source and binary forms, with or without modification, are\n permitted provided that the following conditions are met:\n \n  1. Redistributions of source code must retain the above copyright notice, this list of\n     conditions and the following disclaimer.\n \n  2. Redistributions in binary form must reproduce the above copyright notice, this list\n     of conditions and the following disclaimer in the documentation and/or other materials\n     provided with the distribution.\n \n THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED\n WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR\n CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n \n The views and conclusions contained in the software and documentation are those of the\n authors and should not be interpreted as representing official policies, either expressed\n or implied, of Andrea Leofreddi.",
            "line": " pedigree/raphaelzpd.js:1"
        },
        {
            "message": "Missing item type\nHandler registration",
            "line": " pedigree/raphaelzpd.js:128"
        },
        {
            "message": "Missing item type\nInstance an SVGPoint object with given event coordinates.",
            "line": " pedigree/raphaelzpd.js:145"
        },
        {
            "message": "Missing item type\nSets the current transform matrix of an element.",
            "line": " pedigree/raphaelzpd.js:157"
        },
        {
            "message": "Missing item type\nDumps a matrix to a string (useful for debug).",
            "line": " pedigree/raphaelzpd.js:166"
        },
        {
            "message": "Missing item type\nSets attributes of an element.",
            "line": " pedigree/raphaelzpd.js:175"
        },
        {
            "message": "Missing item type\nHandle mouse move event.",
            "line": " pedigree/raphaelzpd.js:183"
        },
        {
            "message": "Missing item type\nHandle mouse move event.",
            "line": " pedigree/raphaelzpd.js:231"
        },
        {
            "message": "Missing item type\nHandle click event.",
            "line": " pedigree/raphaelzpd.js:265"
        },
        {
            "message": "Missing item type\nHandle mouse button release event.",
            "line": " pedigree/raphaelzpd.js:302"
        },
        {
            "message": "Missing item type\nSaves the state of the graph",
            "line": " pedigree/saveLoadEngine.js:34"
        }
    ]
}